{
  "swagger": "2.0",
  "info": {
    "description": "This is the Mapfre AuditMap3 API",
    "version": "0.0",
    "title": "Mapfre AuditMap3 API"
  },
  "host": "apisb.int.mapfre.com",
  "basePath": "/testapihub",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Login",
      "description": "Login of the application"
    },
    {
      "name": "Alarm Type Categories",
      "description": "Categories of type alarms"
    },
    {
      "name": "Alarm Types",
      "description": "Type of alarms"
    },
    {
      "name": "Artifact Version",
      "description": "Auditmap3 backend version"
    },
    {
      "name": "AuditMap Users",
      "description": "Users of the application"
    },
    {
      "name": "Budget Status Types",
      "description": "Types of status for a budget"
    },
    {
      "name": "Budgets",
      "description": "Budgets for internal audit plans"
    },
    {
      "name": "Budget tracking",
      "description": "Tracking of a budget"
    },
    {
      "name": "Business Process",
      "description": "Processes and threads of a Mapfre business unit"
    },
    {
      "name": "Business Units",
      "description": "Mapfre business units"
    },
    {
      "name": "Celebrated sentences",
      "description": "Sentences to show to the user in the dashboard of the application"
    },
    {
      "name": "Change Reason Category Type",
      "description": "Reason why a user changes his category"
    },
    {
      "name": "Change Types",
      "description": "Currency exchange rates against the euro"
    },
    {
      "name": "Close Period Types",
      "description": "Types of a close period"
    },
    {
      "name": "Close Periods",
      "description": "Close periods for different concepts like internal audit plans"
    },
    {
      "name": "Close Reason Types",
      "description": "Close reason for a job"
    },
    {
      "name": "Countries",
      "description": "Countries of the application"
    },
    {
      "name": "Course Types",
      "description": "Types of courses for an user"
    },
    {
      "name": "Critique Alarm Types",
      "description": "Critically of an alarm"
    },
    {
      "name": "Currencies",
      "description": "Currencies of the application"
    },
    {
      "name": "Departments",
      "description": "Mapfre departments"
    },
    {
      "name": "Entities",
      "description": "Mapfre entities"
    },
    {
      "name": "Factor Risks",
      "description": "Risk factors"
    },
    {
      "name": "Files",
      "description": "Operate with files"
    },
    {
      "name": "Idea Documents",
      "description": "Documents attached to an idea"
    },
    {
      "name": "Idea State Types",
      "description": "State of ideas"
    },
    {
      "name": "Ideas",
      "description": "Ideas"
    },
    {
      "name": "Imputation Concept Types",
      "description": "Types of concept to use when an user imputates hours"
    },
    {
      "name": "Imputation Times",
      "description": "Imputation times"
    },
    {
      "name": "Job Documents",
      "description": "Dcouments attached to a job"
    },
    {
      "name": "Job Guides",
      "description": "Job guides to import to a job program"
    },
    {
      "name": "Job Ideas",
      "description": "Ideas associated with a job"
    },
    {
      "name": "Job programs",
      "description": "Job program associated to a job"
    },
    {
      "name": "Job State Types",
      "description": "State of jobs"
    },
    {
      "name": "Job Types",
      "description": "Types of job"
    },
    {
      "name": "Jobs",
      "description": "Jobs of an internal audit plan"
    },
    {
      "name": "Language Level Types",
      "description": "Language level types"
    },
    {
      "name": "Languages",
      "description": "Languages"
    },
    {
      "name": "News",
      "description": "News to show to the user in the application dashboard"
    },
    {
      "name": "Node Types",
      "description": "Node types for a job program"
    },
    {
      "name": "Organizational Structure Types",
      "description": "Mapfre organizational structure types"
    },
    {
      "name": "Organizational Structures",
      "description": "Mapfre organizational structures"
    },
    {
      "name": "Origins",
      "description": "Job origins"
    },
    {
      "name": "Pais",
      "description": "Internal audit plans"
    },
    {
      "name": "Parameters",
      "description": "Application parameters"
    },
    {
      "name": "Personnel Predictions",
      "description": "Predictions personnel of a internal audit plan"
    },
    {
      "name": "Prediction Change Types",
      "description": "Currency exchange forecast"
    },
    {
      "name": "Process Types",
      "description": "Types of process"
    },
    {
      "name": "Professional Category Types",
      "description": "Types of professional categories for an user"
    },
    {
      "name": "Questionnaire Evaluations",
      "description": "Evaluations of a questionnaire"
    },
    {
      "name": "Questionnaire",
      "description": "Questionnaire of the application"
    },
    {
      "name": "Questions",
      "description": "Questions of a questionnaire"
    },
    {
      "name": "Recommendations",
      "description": "Recommendations of a task"
    },
    {
      "name": "Reports",
      "description": "Reports of a job"
    },
    {
      "name": "Regions",
      "description": "Mapfre regions"
    },
    {
      "name": "Risk Matrices",
      "description": "Risk matrices of an internal audit plan"
    },
    {
      "name": "Role Types",
      "description": "Roles of an user"
    },
    {
      "name": "Sectors",
      "description": "Mapfre sectors"
    },
    {
      "name": "Speciality Types",
      "description": "Speciality types of an user"
    },
    {
      "name": "Status Report Types",
      "description": "Types of report status"
    },
    {
      "name": "Structure Report Types",
      "description": "Types of report structures"
    },
    {
      "name": "Tag translations",
      "description": "Translation of a tag"
    },
    {
      "name": "Tags",
      "description": "Tags to tag concepts of the application"
    },
    {
      "name": "Task Documents",
      "description": "Documents attached to a task"
    },
    {
      "name": "Tasks",
      "description": "Task associated to a job"
    },
    {
      "name": "Territorial Areas",
      "description": "Mapfre terriotorial areas"
    },
    {
      "name": "Trace Types",
      "description": "Trace types for changes in a job"
    },
    {
      "name": "Type Critique Fact",
      "description": "Types of critique facts"
    },
    {
      "name": "Type Risk",
      "description": "Types of risks"
    },
    {
      "name": "User Alarm",
      "description": "User alarms"
    },
    {
      "name": "User Categories",
      "description": "User categories"
    },
    {
      "name": "User Languages",
      "description": "User languages"
    },
    {
      "name": "User Trainings",
      "description": "User trainings"
    },
    {
      "name": "Type Status Recommendation",
      "description": "Types of status recommendations"
    },
    {
      "name": "Valoration Process Types",
      "description": "Types of process valorations"
    },
    {
      "name": "Valoration Report Types",
      "description": "Types of valoration reports"
    },
    {
      "name": "Additional Proposal",
      "description": "Additional Proposals"
    },
    {
      "name": "Node State Type",
      "description": "Types of node states"
    },
    {
      "name": "Budget Expense Types",
      "description": "Budget expense types"
    },
    {
      "name": "External Companies",
      "description": "External companies"
    },
    {
      "name": "External Report Types",
      "description": "External report types"
    },
    {
      "name": "External Audit Types",
      "description": "External audit types"
    },
    {
      "name": "Visibility Rule Types",
      "description": "Visibility rule types"
    },
    {
      "name": "User Visibility Rule Types",
      "description": "User visibility rule types"
    },
    {
      "name": "Activity Types",
      "description": "Activity types"
    },
    {
      "name": "Activities",
      "description": "Activities"
    },
    {
      "name": "External Audits",
      "description": "External audits"
    },
    {
      "name": "Deal Comittees",
      "description": "Deal commitees"
    },
    {
      "name": "Type Status Action Plan",
      "description": "Type status action plan"
    },
    {
      "name": "Global Search",
      "description": "Global Search"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Login with user and password of the application",
        "operationId": "postLogin_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Login succesful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeCategoryAlarmBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/alarm_type_categories": {
      "get": {
        "tags": [
          "Alarm Type Categories"
        ],
        "summary": "Get all alarm type categories",
        "operationId": "getUsingGET_46",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeCategoryAlarmBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/alarm_type_category": {
      "post": {
        "tags": [
          "Alarm Type Categories"
        ],
        "summary": "Add a alarm type category",
        "operationId": "addUsingPOST_43",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCategoryAlarmBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Alarm type category successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/alarm_type_category/{alarmTypeCategoryId}": {
      "put": {
        "tags": [
          "Alarm Type Categories"
        ],
        "summary": "Update a alarm type category",
        "operationId": "updateUsingPUT_42",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "alarmTypeCategoryId",
            "in": "path",
            "description": "typeCategoryAlarmId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCategoryAlarmBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Alarm Type Categories"
        ],
        "summary": "Delete a alarm type category",
        "operationId": "deleteUsingDELETE_43",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "alarmTypeCategoryId",
            "in": "path",
            "description": "typeCategoryAlarmId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/alarm_types": {
      "get": {
        "tags": [
          "Alarm Types"
        ],
        "summary": "Get all alarm types",
        "operationId": "getUsingGET_45",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeAlarmBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/alarm_type": {
      "post": {
        "tags": [
          "Alarm Types"
        ],
        "summary": "Add a alarm type",
        "operationId": "addUsingPOST_42",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeAlarmBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Alarm type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/alarm_type/{alarmTypeId}": {
      "put": {
        "tags": [
          "Alarm Types"
        ],
        "summary": "Update a alarm type",
        "operationId": "updateUsingPUT_41",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "alarmTypeId",
            "in": "path",
            "description": "typeAlarmId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeAlarmBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Alarm Types"
        ],
        "summary": "Delete a alarm type",
        "operationId": "deleteUsingDELETE_42",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "alarmTypeId",
            "in": "path",
            "description": "typeAlarmId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/artifact_version": {
      "get": {
        "tags": [
          "Artifact Version"
        ],
        "summary": "Get artifact version at runtime",
        "operationId": "getUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Resource successfully retrieved",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget_status_types": {
      "get": {
        "tags": [
          "Budget Status Types"
        ],
        "summary": "Get all budget status types",
        "operationId": "getUsingGET_68",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeStatusBudgetBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Budget Status Types"
        ],
        "summary": "Add a budget status type",
        "operationId": "addUsingPOST_65",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStatusBudgetBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Budget status type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget_status_type/{typeStatusBudgetId}": {
      "delete": {
        "tags": [
          "Budget Status Types"
        ],
        "summary": "Delete a budget status type",
        "operationId": "deleteUsingDELETE_65",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeStatusBudgetId",
            "in": "path",
            "description": "Identifier of type status budget",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Budget Status Types"
        ],
        "summary": "Update a budget status type",
        "operationId": "updateUsingPUT_64",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeStatusBudgetId",
            "in": "path",
            "description": "typeStatusBudgetId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStatusBudgetBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget_status_type": {
      "post": {
        "tags": [
          "Budget Status Types"
        ],
        "summary": "Create a budget status type",
        "operationId": "addBudgetStatusType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeBudgetStatusBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budgets": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get all budgets",
        "operationId": "getUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Budgets"
        ],
        "summary": "Add a budget",
        "operationId": "addUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Budget successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget/{budgetId}": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get budget information by id (comments)",
        "operationId": "getBudgetUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "budgetId",
            "in": "path",
            "description": "budgetId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "changeToEuro",
            "in": "query",
            "description": "changeToEuro",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Budgets"
        ],
        "summary": "Update a budget",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "budgetId",
            "in": "path",
            "description": "budgetId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Budgets"
        ],
        "summary": "Delete a budget",
        "operationId": "deleteUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "budgetId",
            "in": "path",
            "description": "budgetId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budgets/comment/{budgetId}": {
      "post": {
        "tags": [
          "Budgets"
        ],
        "summary": "Add a comment budget",
        "operationId": "addCommentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "budgetId",
            "in": "path",
            "description": "budgetId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetCommentBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Budget comment successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budgets/group": {
      "post": {
        "tags": [
          "Budgets"
        ],
        "summary": "Create a group of budgets",
        "operationId": "groupBudgetsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "budgetIds",
            "description": "budgetIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "List of budgets created successfully",
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budgets/os/{idOrganizationalStructurePk}": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get budgets by organizational structure and exercise number (optional)",
        "operationId": "getBasicBudgetInfoByOrgStrAndNmrExerciseUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idOrganizationalStructurePk",
            "in": "path",
            "description": "idOrganizationalStructurePk",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nmrExercise",
            "in": "query",
            "description": "nmrExercise",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budgets/template/{orgStrId}": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Delete a budget",
        "operationId": "getDefaultBudgetTemplateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orgStrId",
            "in": "path",
            "description": "Mapfre organizational structure",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/business_units": {
      "get": {
        "tags": [
          "Business Units"
        ],
        "summary": "Get all business units",
        "operationId": "getUsingGET_70",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UnitBusinessBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/business_unit": {
      "post": {
        "tags": [
          "Business Units"
        ],
        "summary": "Add a business unit",
        "operationId": "addUsingPOST_67",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnitBusinessBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Business unit successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/business_unit/{unitBusinessId}": {
      "put": {
        "tags": [
          "Business Units"
        ],
        "summary": "Update a business unit",
        "operationId": "updateUsingPUT_66",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "unitBusinessId",
            "in": "path",
            "description": "unitBusinessId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnitBusinessBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Business Units"
        ],
        "summary": "Delete a business unit",
        "operationId": "deleteUsingDELETE_67",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "unitBusinessId",
            "in": "path",
            "description": "unitBusinessId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/celebrated_sentences": {
      "get": {
        "tags": [
          "Celebrated sentences"
        ],
        "summary": "Get all celebrated sentences",
        "operationId": "getUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CelebratedSentenceBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/celebrated_sentence": {
      "post": {
        "tags": [
          "Celebrated sentences"
        ],
        "summary": "Creation of a celebrated sentence",
        "operationId": "addUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CelebratedSentenceBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sentence successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/celebrated_sentence/{id}": {
      "put": {
        "tags": [
          "Celebrated sentences"
        ],
        "summary": "Update of a celebrated sentence",
        "operationId": "updateUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CelebratedSentenceBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sentence successfully updated",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Celebrated sentences"
        ],
        "summary": "Delete of a celebrated sentence",
        "operationId": "deleteUsingDELETE_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Sentence successfully deleted",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/certification_types": {
      "get": {
        "tags": [
          "Certification types"
        ],
        "summary": "Get all certification types",
        "operationId": "getUsingGET_48",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeCertificationBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/certification_type": {
      "post": {
        "tags": [
          "Certification types"
        ],
        "summary": "Add a certification type",
        "operationId": "addUsingPOST_45",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCertificationBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Certification type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/certification_type/{certificationTypeId}": {
      "put": {
        "tags": [
          "Certification types"
        ],
        "summary": "Update a certification type",
        "operationId": "updateUsingPUT_44",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "certificationTypeId",
            "in": "path",
            "description": "typeCertificationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCertificationBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Certification types"
        ],
        "summary": "Delete a certification type",
        "operationId": "deleteUsingDELETE_45",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "certificationTypeId",
            "in": "path",
            "description": "typeCertificationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/change_reason_category_types": {
      "get": {
        "tags": [
          "Change Reason Category Type"
        ],
        "summary": "Get all change reason category types",
        "operationId": "getUsingGET_61",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeReasonChangeCategoryBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/change_reason_category_type": {
      "post": {
        "tags": [
          "Change Reason Category Type"
        ],
        "summary": "Add a change reason category type",
        "operationId": "addUsingPOST_58",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeReasonChangeCategoryBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Change reason category type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/change_reason_category_type/{reasonChangeCategoryTypeId}": {
      "put": {
        "tags": [
          "Change Reason Category Type"
        ],
        "summary": "Update a change reason category type",
        "operationId": "updateUsingPUT_57",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reasonChangeCategoryTypeId",
            "in": "path",
            "description": "typeReasonChangeCategoryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeReasonChangeCategoryBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Change Reason Category Type"
        ],
        "summary": "Delete a change reason category type",
        "operationId": "deleteUsingDELETE_58",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reasonChangeCategoryTypeId",
            "in": "path",
            "description": "typeReasonChangeCategoryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/change_types": {
      "get": {
        "tags": [
          "Change Types"
        ],
        "summary": "Get all change types",
        "operationId": "getUsingGET_49",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeChangeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Change Types"
        ],
        "summary": "Add a list of change type",
        "operationId": "importTypeChangeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeChangeBO"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Change types successfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/change_type": {
      "post": {
        "tags": [
          "Change Types"
        ],
        "summary": "Add a change type",
        "operationId": "addUsingPOST_46",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeChangeBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Change type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/change_type/{typeChangeId}": {
      "put": {
        "tags": [
          "Change Types"
        ],
        "summary": "Update a change type",
        "operationId": "updateUsingPUT_45",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeChangeId",
            "in": "path",
            "description": "typeChangeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeChangeBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Change Types"
        ],
        "summary": "Delete a change type",
        "operationId": "deleteUsingDELETE_46",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeChangeId",
            "in": "path",
            "description": "typeChangeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/close_period_types": {
      "get": {
        "tags": [
          "Close Period Types"
        ],
        "summary": "Get all close period types",
        "operationId": "getUsingGET_50",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeClosePeriodBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/close_period_type": {
      "post": {
        "tags": [
          "Close Period Types"
        ],
        "summary": "Add a close period type",
        "operationId": "addUsingPOST_47",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeClosePeriodBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Close period type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/close_period_type/{closePeriodTypeId}": {
      "put": {
        "tags": [
          "Close Period Types"
        ],
        "summary": "Update a close period type",
        "operationId": "updateUsingPUT_46",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "closePeriodTypeId",
            "in": "path",
            "description": "typeClosePeriodId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeClosePeriodBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Close Period Types"
        ],
        "summary": "Delete a close period type",
        "operationId": "deleteUsingDELETE_47",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "closePeriodTypeId",
            "in": "path",
            "description": "typeClosePeriodId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/close_periods": {
      "get": {
        "tags": [
          "Close Periods"
        ],
        "summary": "Get all close periods",
        "operationId": "getUsingGET_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "exercise",
            "in": "query",
            "description": "exercise",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClosePeriodBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/close_period": {
      "post": {
        "tags": [
          "Close Periods"
        ],
        "summary": "Add a close period",
        "operationId": "addUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosePeriodBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Close period successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/close_period/{closePeriodId}": {
      "put": {
        "tags": [
          "Close Periods"
        ],
        "summary": "Update a close period",
        "operationId": "updateUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "closePeriodId",
            "in": "path",
            "description": "closePeriodId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosePeriodBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Close Periods"
        ],
        "summary": "Delete a close period",
        "operationId": "deleteUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "closePeriodId",
            "in": "path",
            "description": "closePeriodId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/close_reason_types": {
      "get": {
        "tags": [
          "Close Reason Types"
        ],
        "summary": "Get all close reason types",
        "operationId": "getUsingGET_62",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeReasonCloseBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/close_reason_type": {
      "post": {
        "tags": [
          "Close Reason Types"
        ],
        "summary": "Add a close reason type",
        "operationId": "addUsingPOST_59",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeReasonCloseBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Close reason type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/close_reason_type/{reasonCloseTypeId}": {
      "put": {
        "tags": [
          "Close Reason Types"
        ],
        "summary": "Update a close reason type",
        "operationId": "updateUsingPUT_58",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reasonCloseTypeId",
            "in": "path",
            "description": "typeReasonCloseId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeReasonCloseBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Close Reason Types"
        ],
        "summary": "Delete a close reason type",
        "operationId": "deleteUsingDELETE_59",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reasonCloseTypeId",
            "in": "path",
            "description": "typeReasonCloseId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Get all countries",
        "operationId": "getUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CountryBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/country": {
      "post": {
        "tags": [
          "Countries"
        ],
        "summary": "Add a country",
        "operationId": "addUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CountryBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Country successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/business_processes": {
      "post": {
        "tags": [
          "Business Process"
        ],
        "summary": "Crate new version of a business process map",
        "operationId": "saveUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessUnitBusinessBO"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Business process unit successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/business_processes/valorate": {
      "put": {
        "tags": [
          "Business Process"
        ],
        "summary": "Valorate the bussiness process of a Mapfre unit business",
        "operationId": "valorateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessUnitBusinessBO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/business_processes/business_process_unit/{processUnitBusinessId}": {
      "get": {
        "tags": [
          "Business Process"
        ],
        "summary": "Get map of business process by unit business and version",
        "operationId": "getUsingGET_32",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "processUnitBusinessId",
            "in": "path",
            "description": "processUnitBusinessId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "version",
            "in": "query",
            "description": "version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessUnitBusinessBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/business_processes/business_process_unit/{processUnitBusinessId}/country_process/{processCountryId}": {
      "get": {
        "tags": [
          "Business Process"
        ],
        "summary": "Return a map of local business processes",
        "operationId": "getUsingGET_30",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "processCountryId",
            "in": "path",
            "description": "processCountryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "processUnitBusinessId",
            "in": "path",
            "description": "processUnitBusinessId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "version",
            "in": "query",
            "description": "version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List uccessfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessCountryBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/country/{countryId}": {
      "put": {
        "tags": [
          "Countries"
        ],
        "summary": "Update a country",
        "operationId": "updateUsingPUT_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "countryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CountryBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Countries"
        ],
        "summary": "Delete a country",
        "operationId": "deleteUsingDELETE_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "countryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/country/{countryId}/regions": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Get all regions from a country",
        "operationId": "findCountryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "countryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "$ref": "#/definitions/CountryBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/country/{countryId}/region/{regionId}/territories": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Get all territories from a region and country",
        "operationId": "findTerrForRegionsCountryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "countryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "regionId",
            "in": "path",
            "description": "regionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "$ref": "#/definitions/CountryRegionBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/course_types": {
      "get": {
        "tags": [
          "Course Types"
        ],
        "summary": "Get all course types",
        "operationId": "getUsingGET_52",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeCourseBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/course_type": {
      "post": {
        "tags": [
          "Course Types"
        ],
        "summary": "Add a course type",
        "operationId": "addUsingPOST_49",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCourseBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Course type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/course_type/{courseTypeId}": {
      "put": {
        "tags": [
          "Course Types"
        ],
        "summary": "Update a course type",
        "operationId": "updateUsingPUT_48",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "courseTypeId",
            "in": "path",
            "description": "typeCourseId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCourseBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Course Types"
        ],
        "summary": "Delete a course type",
        "operationId": "deleteUsingDELETE_49",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "courseTypeId",
            "in": "path",
            "description": "typeCourseId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/critique_alarm_types": {
      "get": {
        "tags": [
          "Critique Alarm Types"
        ],
        "summary": "Get all critique alarm types",
        "operationId": "getUsingGET_53",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeCriquiteAlarmBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/critique_alarm_type": {
      "post": {
        "tags": [
          "Critique Alarm Types"
        ],
        "summary": "Add a critique alarm type",
        "operationId": "addUsingPOST_50",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCriquiteAlarmBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Critique alarm type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/critique_alarm_type/{criquiteAlarmTypeId}": {
      "put": {
        "tags": [
          "Critique Alarm Types"
        ],
        "summary": "Update a critique alarm type",
        "operationId": "updateUsingPUT_49",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "criquiteAlarmTypeId",
            "in": "path",
            "description": "typeCriquiteAlarmId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCriquiteAlarmBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Critique Alarm Types"
        ],
        "summary": "Delete a critique alarm type",
        "operationId": "deleteUsingDELETE_50",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "criquiteAlarmTypeId",
            "in": "path",
            "description": "typeCriquiteAlarmId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Get all Currencies",
        "operationId": "getUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrencyBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/currency": {
      "post": {
        "tags": [
          "Currencies"
        ],
        "summary": "Add a currency",
        "operationId": "addUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Currency successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/currency/{currencyId}": {
      "put": {
        "tags": [
          "Currencies"
        ],
        "summary": "Update a currency",
        "operationId": "updateUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "currencyId",
            "in": "path",
            "description": "currencyId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Currencies"
        ],
        "summary": "Delete a currency",
        "operationId": "deleteUsingDELETE_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "currencyId",
            "in": "path",
            "description": "currencyId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/departments": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get all departments",
        "operationId": "getUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "organizationalStructureId",
            "in": "query",
            "description": "Identifier of Mapfre organizational structure",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DepartmentBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/department": {
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Add a department",
        "operationId": "addUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DepartmentBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Department successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/department/{departmentId}": {
      "put": {
        "tags": [
          "Departments"
        ],
        "summary": "Update a department",
        "operationId": "updateUsingPUT_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "departmentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DepartmentBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Departments"
        ],
        "summary": "Delete a department",
        "operationId": "deleteUsingDELETE_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "departmentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/entities": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Get all entamaps",
        "operationId": "getUsingGET_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EntamapBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/entity": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Add a entamap",
        "operationId": "addUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntamapBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Entamap successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/entities/by_countries": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Get all entamap by countrylist",
        "operationId": "getByCountryListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "countriesIdsList",
            "description": "countriesIdsList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EntamapBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/entities/organizational/{organizationalStructureId}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "Get all entamaps",
        "operationId": "getEntitiesByOrgStrcUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "organizationalStructureId",
            "in": "path",
            "description": "organizationalStructureId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EntamapBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/entity/{entamapId}": {
      "put": {
        "tags": [
          "Entities"
        ],
        "summary": "Update a entamap",
        "operationId": "updateUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "entamapId",
            "in": "path",
            "description": "entamapId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntamapBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Entities"
        ],
        "summary": "Delete a entamap",
        "operationId": "deleteUsingDELETE_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "entamapId",
            "in": "path",
            "description": "entamapId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/factor_risks": {
      "get": {
        "tags": [
          "Factor Risks"
        ],
        "summary": "Get all factor risks",
        "operationId": "getUsingGET_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FactorRiskBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/factor_risk": {
      "post": {
        "tags": [
          "Factor Risks"
        ],
        "summary": "Add a factor risk",
        "operationId": "addUsingPOST_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FactorRiskBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Factor risk successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/factor_risk/{factorRiskId}": {
      "put": {
        "tags": [
          "Factor Risks"
        ],
        "summary": "Update a factor risk",
        "operationId": "updateUsingPUT_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "factorRiskId",
            "in": "path",
            "description": "factorRiskId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FactorRiskBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Factor Risks"
        ],
        "summary": "Delete a factor risk",
        "operationId": "deleteUsingDELETE_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "factorRiskId",
            "in": "path",
            "description": "factorRiskId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/idea_documents": {
      "get": {
        "tags": [
          "Idea Documents"
        ],
        "summary": "Get all idea documents",
        "operationId": "getUsingGET_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdeaDocumentBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/idea_document": {
      "post": {
        "tags": [
          "Idea Documents"
        ],
        "summary": "Add a idea document",
        "operationId": "addUsingPOST_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdeaDocumentBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Idea document successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/idea_document/{ideaDocumentId}": {
      "put": {
        "tags": [
          "Idea Documents"
        ],
        "summary": "Update a idea document",
        "operationId": "updateUsingPUT_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ideaDocumentId",
            "in": "path",
            "description": "ideaDocumentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdeaDocumentBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Idea Documents"
        ],
        "summary": "Delete a idea document",
        "operationId": "deleteUsingDELETE_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ideaDocumentId",
            "in": "path",
            "description": "ideaDocumentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/idea_state_types": {
      "get": {
        "tags": [
          "Idea State Types"
        ],
        "summary": "Get all idea state types",
        "operationId": "getUsingGET_65",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeStateIdeaBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/idea_state_type": {
      "post": {
        "tags": [
          "Idea State Types"
        ],
        "summary": "Add a idea state type",
        "operationId": "addUsingPOST_62",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStateIdeaBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Idea state type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/idea_state_type/{stateIdeaTypeId}": {
      "put": {
        "tags": [
          "Idea State Types"
        ],
        "summary": "Update a idea state type",
        "operationId": "updateUsingPUT_61",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stateIdeaTypeId",
            "in": "path",
            "description": "typeStateIdeaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStateIdeaBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Idea State Types"
        ],
        "summary": "Delete a idea state type",
        "operationId": "deleteUsingDELETE_62",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stateIdeaTypeId",
            "in": "path",
            "description": "typeStateIdeaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/ideas": {
      "get": {
        "tags": [
          "Ideas"
        ],
        "summary": "Get all ideas",
        "operationId": "getUsingGET_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdeaBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/idea": {
      "post": {
        "tags": [
          "Ideas"
        ],
        "summary": "Add a idea",
        "operationId": "addUsingPOST_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdeaBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Idea successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/idea/{ideaId}": {
      "put": {
        "tags": [
          "Ideas"
        ],
        "summary": "Update a idea",
        "operationId": "updateUsingPUT_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ideaId",
            "in": "path",
            "description": "ideaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdeaBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Ideas"
        ],
        "summary": "Delete a idea",
        "operationId": "deleteUsingDELETE_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ideaId",
            "in": "path",
            "description": "ideaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/imputation_concept_types": {
      "get": {
        "tags": [
          "Imputation Concept Types"
        ],
        "summary": "Get all imputation concept types",
        "operationId": "getUsingGET_51",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeConceptImputationBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/imputation_concept_type": {
      "post": {
        "tags": [
          "Imputation Concept Types"
        ],
        "summary": "Add a imputation concept type",
        "operationId": "addUsingPOST_48",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeConceptImputationBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Imputation concept type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/imputation_concept_type/{conceptImputationTypeId}": {
      "put": {
        "tags": [
          "Imputation Concept Types"
        ],
        "summary": "Update a imputation concept types",
        "operationId": "updateUsingPUT_47",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "conceptImputationTypeId",
            "in": "path",
            "description": "conceptImputationTypeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeConceptImputationBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Imputation Concept Types"
        ],
        "summary": "Delete a imputation concept types",
        "operationId": "deleteUsingDELETE_48",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "conceptImputationTypeId",
            "in": "path",
            "description": "conceptImputationTypeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/imputation_times": {
      "get": {
        "tags": [
          "Imputation Times"
        ],
        "summary": "Get all imputation times",
        "operationId": "getUsingGET_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImputationTimeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/filtered_imputations": {
      "get": {
        "tags": [
          "Imputation Times"
        ],
        "summary": "Get time imputations by query params with pagination",
        "operationId": "getUsingFilteredImputations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userIds",
            "in": "query",
            "description": "Identifier of users",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orgStrIds",
            "in": "query",
            "description": "Identifier of organizational structures",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "categoryIds",
            "in": "query",
            "description": "Identifier of the categorys",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "activityTypeIds",
            "in": "query",
            "description": "Identifier of the activity types",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Date range",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "finishDate",
            "in": "query",
            "description": "Date range",
            "required": false,
            "type": "string",
            "format": "date_time"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImputationTimeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/exported_imputations": {
      "get": {
        "tags": [
          "Imputation Times"
        ],
        "summary": "Export imputations by query params",
        "operationId": "exportImputationsByFilters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userIds",
            "in": "query",
            "description": "Identifier of users",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orgStrIds",
            "in": "query",
            "description": "Identifier of the organizational structures",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "categoryIds",
            "in": "query",
            "description": "Identifier of the user categories",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "activityTypeIds",
            "in": "query",
            "description": "Identifier of the imputation concepts",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Initial range date",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "finishDate",
            "in": "query",
            "description": "Finish range date",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "url",
            "in": "query",
            "description": "Presigned url to upload file to AWS bucket",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The file was download",
            "schema": {
              "type": "string",
              "description": "File identifier"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/imputation_time": {
      "post": {
        "tags": [
          "Imputation Times"
        ],
        "summary": "Add a imputation time",
        "operationId": "addUsingPOST_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImputationTimeBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Imputation time successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/imputation_time/{imputationTimeId}": {
      "put": {
        "tags": [
          "Imputation Times"
        ],
        "summary": "Update a imputation time",
        "operationId": "updateUsingPUT_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "imputationTimeId",
            "in": "path",
            "description": "imputationTimeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImputationTimeBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Imputation Times"
        ],
        "summary": "Delete a imputation time",
        "operationId": "deleteUsingDELETE_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "imputationTimeId",
            "in": "path",
            "description": "imputationTimeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/imputation_time/activities/os/{idOrganizationalStructure}": {
      "get": {
        "tags": [
          "Imputation Times"
        ],
        "summary": "Get all activity for imputation times for an user",
        "operationId": "getImputationTimeActivitiesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idOrganizationalStructure",
            "in": "path",
            "description": "Mapfre organizational structure",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImputationTimeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/imputation_time/user/{userAmapId}": {
      "get": {
        "tags": [
          "Imputation Times"
        ],
        "summary": "Get all imputation times for an user",
        "operationId": "getImputationTimeByUserAndStartToFinishUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userAmapId",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "type": "string"
          },
          {
            "name": "finishDate",
            "in": "query",
            "description": "Finish date",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImputationTimeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/imputation_time/user/{userAmapId}/info": {
      "get": {
        "tags": [
          "Imputation Times"
        ],
        "summary": "Get information for imputation times for an user",
        "operationId": "getImputationTimeInfoUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userAmapId",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImputationTimeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_documents": {
      "get": {
        "tags": [
          "Job Documents"
        ],
        "summary": "Get all job documents",
        "operationId": "getUsingGET_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobDocumentBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_document": {
      "post": {
        "tags": [
          "Job Documents"
        ],
        "summary": "Add a job document",
        "operationId": "addUsingPOST_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDocumentBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Job document successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_document/{jobDocumentId}": {
      "put": {
        "tags": [
          "Job Documents"
        ],
        "summary": "Update a job document",
        "operationId": "updateUsingPUT_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobDocumentId",
            "in": "path",
            "description": "jobDocumentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDocumentBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Job Documents"
        ],
        "summary": "Delete a job document",
        "operationId": "deleteUsingDELETE_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobDocumentId",
            "in": "path",
            "description": "jobDocumentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_guides": {
      "get": {
        "tags": [
          "Job Guides"
        ],
        "summary": "Get all job guides",
        "operationId": "getUsingGET_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GuideJobBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_guide": {
      "post": {
        "tags": [
          "Job Guides"
        ],
        "summary": "Add a job guide",
        "operationId": "addUsingPOST_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GuideJobBO"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Job guide successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_guide/{jobGuideId}": {
      "put": {
        "tags": [
          "Job Guides"
        ],
        "summary": "Update a job guide",
        "operationId": "updateUsingPUT_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobGuideId",
            "in": "path",
            "description": "guideJobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GuideJobBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Job Guides"
        ],
        "summary": "Delete a job guide",
        "operationId": "deleteUsingDELETE_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobGuideId",
            "in": "path",
            "description": "guideJobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_ideas": {
      "get": {
        "tags": [
          "Job Ideas"
        ],
        "summary": "Get all job idea",
        "operationId": "getUsingGET_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobIdeaBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_idea": {
      "post": {
        "tags": [
          "Job Ideas"
        ],
        "summary": "Add a job idea",
        "operationId": "addUsingPOST_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobIdeaBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Job idea successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_idea/{jobIdeaId}": {
      "put": {
        "tags": [
          "Job Ideas"
        ],
        "summary": "Update a job idea",
        "operationId": "updateUsingPUT_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobIdeaId",
            "in": "path",
            "description": "jobIdeaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobIdeaBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Job Ideas"
        ],
        "summary": "Delete a job idea",
        "operationId": "deleteUsingDELETE_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobIdeaId",
            "in": "path",
            "description": "jobIdeaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_logs": {
      "get": {
        "tags": [
          "Job Logs"
        ],
        "summary": "Get all job logs",
        "operationId": "getUsingGET_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobLogBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_log": {
      "post": {
        "tags": [
          "Job Logs"
        ],
        "summary": "Add a job log",
        "operationId": "addUsingPOST_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobLogBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Job log successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_log/{jobLogId}": {
      "put": {
        "tags": [
          "Job Logs"
        ],
        "summary": "Update a job log",
        "operationId": "updateUsingPUT_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobLogId",
            "in": "path",
            "description": "jobLogId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobLogBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Job Logs"
        ],
        "summary": "Delete a job log",
        "operationId": "deleteUsingDELETE_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobLogId",
            "in": "path",
            "description": "jobLogId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_programs": {
      "get": {
        "tags": [
          "Job programs"
        ],
        "summary": "Get all program job",
        "operationId": "getUsingGET_34",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProgramJobBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_program": {
      "post": {
        "tags": [
          "Job programs"
        ],
        "summary": "Add a program job",
        "operationId": "addUsingPOST_30",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProgramJobBO"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Job program successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_program/{jobId}": {
      "get": {
        "tags": [
          "Job programs"
        ],
        "summary": "Get all program job by job",
        "operationId": "getByJobIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProgramJobBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Job programs"
        ],
        "summary": "Update a program job",
        "operationId": "updateUsingPUT_30",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "programJobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProgramJobBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Job programs"
        ],
        "summary": "Delete a program job",
        "operationId": "deleteUsingDELETE_30",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "programJobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_program/import/{jobId}": {
      "post": {
        "tags": [
          "Job programs"
        ],
        "summary": "Add a program job",
        "operationId": "addUsingJobProgamPOST_30",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "Identifier of the job",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sourceJobId",
            "in": "query",
            "description": "Source id of the job",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_state_types": {
      "get": {
        "tags": [
          "Job State Types"
        ],
        "summary": "Get all job state types",
        "operationId": "getUsingGET_66",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeStateJobBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_state_type": {
      "post": {
        "tags": [
          "Job State Types"
        ],
        "summary": "Add a job state type",
        "operationId": "addUsingPOST_63",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStateJobBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Job state type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_state_type/{stateJobTypeId}": {
      "put": {
        "tags": [
          "Job State Types"
        ],
        "summary": "Update a job state type",
        "operationId": "updateUsingPUT_62",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stateJobTypeId",
            "in": "path",
            "description": "typeStateJobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStateJobBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Job State Types"
        ],
        "summary": "Delete a job state type",
        "operationId": "deleteUsingDELETE_63",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stateJobTypeId",
            "in": "path",
            "description": "typeStateJobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_types": {
      "get": {
        "tags": [
          "Job Types"
        ],
        "summary": "Get all job types",
        "operationId": "getUsingGET_54",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeJobBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_type": {
      "post": {
        "tags": [
          "Job Types"
        ],
        "summary": "Add a job types",
        "operationId": "addUsingPOST_51",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeJobBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Job type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_type/{jobTypeId}": {
      "put": {
        "tags": [
          "Job Types"
        ],
        "summary": "Update a job types",
        "operationId": "updateUsingPUT_50",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobTypeId",
            "in": "path",
            "description": "typeJobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeJobBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Job Types"
        ],
        "summary": "Delete a job types",
        "operationId": "deleteUsingDELETE_51",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobTypeId",
            "in": "path",
            "description": "typeJobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/filtered_jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get jobs by query params with pagination",
        "operationId": "getUsingFilteredJobsGET_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applyPai",
            "in": "query",
            "description": "If applies to a internal audit plan",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entityIds",
            "in": "query",
            "description": "Identifier of entities",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "statusIds",
            "in": "query",
            "description": "Identifier of the status",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orgStrIds",
            "in": "query",
            "description": "Identifier of the organizatie structures",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tagIds",
            "in": "query",
            "description": "Identifier of the tags",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dateFinish",
            "in": "query",
            "description": "Finish date of the job",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "dateExpectFinish",
            "in": "query",
            "description": "Expect finish date of the job",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "dateInitial",
            "in": "query",
            "description": "Initial date",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "dateExpectStart",
            "in": "query",
            "description": "Expected start date",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "paiName",
            "in": "query",
            "description": "Name of the internal audit plan",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "query",
            "description": "Job name",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobOriginIds",
            "in": "query",
            "description": "Identifier of the origin job",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "countryIds",
            "in": "query",
            "description": "Identifier of the countries",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "processName",
            "in": "query",
            "description": "Name of process",
            "required": false,
            "type": "string"
          },
          {
            "name": "regionIds",
            "in": "query",
            "description": "Identifier of the regions",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sectorIds",
            "in": "query",
            "description": "Identifier of the sectors",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "jobTypeIds",
            "in": "query",
            "description": "Identifier of type jobs",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "jobExpected",
            "in": "query",
            "description": "If the job is expected",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "businessUnitIds",
            "in": "query",
            "description": "Identifier of business units",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "localProcess",
            "in": "query",
            "description": "Name of local process",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page request",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of each page",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/exported_jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Export jobs by query params",
        "operationId": "exportJobsByFilters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applyPai",
            "in": "query",
            "description": "If applies to a internal audit plan",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entityIds",
            "in": "query",
            "description": "Identifier of entities",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "statusIds",
            "in": "query",
            "description": "Identifier of the status",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orgStrIds",
            "in": "query",
            "description": "Identifier of the organizatie structures",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tagIds",
            "in": "query",
            "description": "Identifier of the tags",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dateFinish",
            "in": "query",
            "description": "Finish date of the job",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "dateExpectFinish",
            "in": "query",
            "description": "Expect finish date of the job",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "dateInitial",
            "in": "query",
            "description": "Initial date",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "dateExpectStart",
            "in": "query",
            "description": "Expected start date",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "paiName",
            "in": "query",
            "description": "Name of the internal audit plan",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "query",
            "description": "Job name",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobOriginIds",
            "in": "query",
            "description": "Identifier of the origin job",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "countryIds",
            "in": "query",
            "description": "Identifier of the countries",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "processName",
            "in": "query",
            "description": "Name of process",
            "required": false,
            "type": "string"
          },
          {
            "name": "regionIds",
            "in": "query",
            "description": "Identifier of the regions",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sectorIds",
            "in": "query",
            "description": "Identifier of the sectors",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "jobTypeIds",
            "in": "query",
            "description": "Identifier of type jobs",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "jobExpected",
            "in": "query",
            "description": "If the job is expected",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "businessUnitIds",
            "in": "query",
            "description": "Identifier of business units",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "localProcess",
            "in": "query",
            "description": "Name of local process",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page request",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of each page",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The file was uploaded",
            "schema": {
              "type": "string",
              "description": "File identifier"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_statistics": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get job statistics by query params",
        "operationId": "getJobSatistics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "entityIds",
            "in": "query",
            "description": "Identifier of entities",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orgStrIds",
            "in": "query",
            "description": "Identifier of the organizatie structures",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tagIds",
            "in": "query",
            "description": "Identifier of the tags",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "countryIds",
            "in": "query",
            "description": "Identifier of the countries",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "jobTypeIds",
            "in": "query",
            "description": "Identifier of type jobs",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "businessUnitIds",
            "in": "query",
            "description": "Identifier of business units",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "exercise",
            "in": "query",
            "description": "Fiscal exercise",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get all job",
        "operationId": "getUsingGET_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "jobId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Add a job",
        "operationId": "addUsingPOST_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Job successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job/{jobId}": {
      "put": {
        "tags": [
          "Jobs"
        ],
        "summary": "Update a job",
        "operationId": "updateUsingPUT_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "summary": "Delete a job",
        "operationId": "deleteUsingDELETE_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job/{jobId}/update_state": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Update the state of a Job",
        "operationId": "updateStateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStateJobBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Job succesfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "204": {
            "description": "Job successfully updated",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job/{jobId}/users": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get all users by job",
        "operationId": "getUsersByJobIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "Identifier of the job",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_pai": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Add a relation job and internal audit plan",
        "operationId": "addUsingPOST_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobPaiBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Relation successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/job_os": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Create a relation between a job and an organizational structure",
        "operationId": "postJobOs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobOrganizationalStructureBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Business unit successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/language_level_types": {
      "get": {
        "tags": [
          "Language Level Types"
        ],
        "summary": "Get all language level types",
        "operationId": "getUsingGET_55",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeLevelLanguageBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/language_level_type": {
      "post": {
        "tags": [
          "Language Level Types"
        ],
        "summary": "Add a language level type",
        "operationId": "addUsingPOST_52",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeLevelLanguageBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Language level type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/language_level_type/{languageLevelTypeId}": {
      "put": {
        "tags": [
          "Language Level Types"
        ],
        "summary": "Update a language level type",
        "operationId": "updateUsingPUT_51",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "languageLevelTypeId",
            "in": "path",
            "description": "typeLevelLanguageId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeLevelLanguageBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Language Level Types"
        ],
        "summary": "Delete a language level type",
        "operationId": "deleteUsingDELETE_52",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "languageLevelTypeId",
            "in": "path",
            "description": "typeLevelLanguageId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "Languages"
        ],
        "summary": "Get all languages",
        "operationId": "getUsingGET_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LanguageBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/language": {
      "post": {
        "tags": [
          "Languages"
        ],
        "summary": "Add a language",
        "operationId": "addLanguageUsingPOST_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanguageBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Language successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/language/{languageId}": {
      "put": {
        "tags": [
          "Languages"
        ],
        "summary": "Update a language",
        "operationId": "updateUsingPUT_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "languageId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanguageBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Languages"
        ],
        "summary": "Delete a language",
        "operationId": "deleteUsingDELETE_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "languageId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/language/{languageCode}/translations": {
      "get": {
        "tags": [
          "Languages"
        ],
        "summary": "Get all translations of a language by code",
        "operationId": "getUsingLanguageTranslationsGET_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "languageCode",
            "in": "path",
            "description": "Code of the language",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "object",
              "description": "Code of the translation",
              "additionalProperties": {
                "type": "string",
                "description": "Value of the translation"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/news": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get all news",
        "operationId": "getUsingGET_23",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/new": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Add a new",
        "operationId": "addUsingPOST_22",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/new/{newId}": {
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Update a new",
        "operationId": "updateUsingPUT_22",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "newId",
            "in": "path",
            "description": "newId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete a new",
        "operationId": "deleteUsingDELETE_22",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "newId",
            "in": "path",
            "description": "newId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/node_types": {
      "get": {
        "tags": [
          "Node Types"
        ],
        "summary": "Get all node type",
        "operationId": "getUsingGET_56",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeNodeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/node_type": {
      "post": {
        "tags": [
          "Node Types"
        ],
        "summary": "Add a node type",
        "operationId": "addUsingPOST_53",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeNodeBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Node type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/node_type/{nodeTypeId}": {
      "put": {
        "tags": [
          "Node Types"
        ],
        "summary": "Update a node type",
        "operationId": "updateUsingPUT_52",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nodeTypeId",
            "in": "path",
            "description": "typeNodeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeNodeBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Node Types"
        ],
        "summary": "Delete a node type",
        "operationId": "deleteUsingDELETE_53",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nodeTypeId",
            "in": "path",
            "description": "typeNodeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/organizational_structure_types": {
      "get": {
        "tags": [
          "Organizational Structure Types"
        ],
        "summary": "Get all organizational structure types",
        "operationId": "getUsingGET_57",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeOrganizationalStructureBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/organizational_structure_type": {
      "post": {
        "tags": [
          "Organizational Structure Types"
        ],
        "summary": "Add a organizational structure types",
        "operationId": "addUsingPOST_54",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeOrganizationalStructureBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Organizational structure type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/organizational_structure_type/{organizationalStructureTypeId}": {
      "put": {
        "tags": [
          "Organizational Structure Types"
        ],
        "summary": "Update a organizational structure type",
        "operationId": "updateUsingPUT_53",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "organizationalStructureTypeId",
            "in": "path",
            "description": "typeOrganizationalStructureId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeOrganizationalStructureBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Organizational Structure Types"
        ],
        "summary": "Delete a organizational structure type",
        "operationId": "deleteUsingDELETE_54",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "organizationalStructureTypeId",
            "in": "path",
            "description": "typeOrganizationalStructureId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/organizational_structures": {
      "get": {
        "tags": [
          "Organizational Structures"
        ],
        "summary": "Get all organizational structures",
        "operationId": "getByCountryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "countriesId",
            "in": "query",
            "description": "Identifier of the country",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganizationalStructureBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/organizational_structure": {
      "post": {
        "tags": [
          "Organizational Structures"
        ],
        "summary": "Add an organizational structure",
        "operationId": "addUsingPOST_23",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrganizationalStructureBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Oganizational structure successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/origins": {
      "get": {
        "tags": [
          "Origins"
        ],
        "summary": "Get all origins",
        "operationId": "getUsingGET_26",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OriginBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/origin": {
      "post": {
        "tags": [
          "Origins"
        ],
        "summary": "Add an origin",
        "operationId": "addUsingPOST_25",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OriginBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Origin successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/origin/{originId}": {
      "put": {
        "tags": [
          "Origins"
        ],
        "summary": "Update an origin",
        "operationId": "updateUsingPUT_25",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "originId",
            "in": "path",
            "description": "originId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OriginBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Origins"
        ],
        "summary": "Delete an origin",
        "operationId": "deleteUsingDELETE_25",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "originId",
            "in": "path",
            "description": "originId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/pais": {
      "get": {
        "tags": [
          "Pais"
        ],
        "summary": "Get all pai",
        "operationId": "getUsingGET_27",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "paiId",
            "in": "query",
            "description": "paiId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "organizationalStructureID",
            "in": "query",
            "description": "organizationalStructureID",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaiBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/pai": {
      "post": {
        "tags": [
          "Pais"
        ],
        "summary": "Add a pai",
        "operationId": "addUsingPOST_26",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paiBo",
            "description": "paiBo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaiBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created user amap3",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/pai/{paiId}": {
      "delete": {
        "tags": [
          "Pais"
        ],
        "summary": "Delete a PAI",
        "operationId": "deletePaiById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "paiId",
            "in": "path",
            "description": "Identifier of the PAI",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/parameters": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get all parameters",
        "operationId": "getUsingGET_28",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParameterBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/parameter": {
      "post": {
        "tags": [
          "Parameters"
        ],
        "summary": "Add a parameter",
        "operationId": "addUsingPOST_27",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Parameter successfully created",
            "schema": {
              "$ref": "#/definitions/ParameterBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/parameter/{parameterId}": {
      "put": {
        "tags": [
          "Parameters"
        ],
        "summary": "Update a parameter",
        "operationId": "updateUsingPUT_26",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "parameterId",
            "in": "path",
            "description": "parameterId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParameterBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Parameters"
        ],
        "summary": "Delete a parameter",
        "operationId": "deleteUsingDELETE_26",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "parameterId",
            "in": "path",
            "description": "parameterId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/personnel_predictions": {
      "get": {
        "tags": [
          "Personnel Predictions"
        ],
        "summary": "Get all personnel prediction",
        "operationId": "getUsingGET_29",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PredictionPersonnelBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/personnel_prediction": {
      "post": {
        "tags": [
          "Personnel Predictions"
        ],
        "summary": "Add a personnel prediction",
        "operationId": "addUsingPOST_28",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PredictionPersonnelBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Business unit successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/personnel_prediction/{personnelPredictionId}": {
      "get": {
        "tags": [
          "Personnel Predictions"
        ],
        "summary": "Get all personnel prediction",
        "operationId": "getPPersonnelByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "personnelPredictionId",
            "in": "path",
            "description": "personnelPredictionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PredictionPersonnelBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Personnel Predictions"
        ],
        "summary": "Update a personnel prediction",
        "operationId": "updateUsingPUT_27",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "personnelPredictionId",
            "in": "path",
            "description": "Personnel prediction identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PredictionPersonnelBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Personnel Predictions"
        ],
        "summary": "Delete a personnel prediction",
        "operationId": "deleteUsingDELETE_27",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "personnelPredictionId",
            "in": "path",
            "description": "predictionPersonnelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/personnel_prediction/template/{orgStrId}": {
      "get": {
        "tags": [
          "Personnel Predictions"
        ],
        "summary": "Get a new personnel prediction",
        "operationId": "getDefaultPredictionPersonnelTemplateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orgStrId",
            "in": "path",
            "description": "Mapfre organizational structure identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Report successfully retrieved",
            "schema": {
              "$ref": "#/definitions/PredictionPersonnelBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/personnel_predictions/organizational/{organizationalStructureId}": {
      "get": {
        "tags": [
          "Personnel Predictions"
        ],
        "summary": "Get all personnel prediction",
        "operationId": "getPPersonnelByOrgStrUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "organizationalStructureId",
            "in": "path",
            "description": "organizationalStructureId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PredictionPersonnelBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/prediction_change_types": {
      "get": {
        "tags": [
          "Prediction Change Types"
        ],
        "summary": "Get all prediction change types",
        "operationId": "getUsingGET_59",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypePredictionChangeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Prediction Change Types"
        ],
        "summary": "Import prediction change type",
        "operationId": "importPredictionChangeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypePredictionChangeBO"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Prediction changes type successfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/prediction_change_type": {
      "post": {
        "tags": [
          "Prediction Change Types"
        ],
        "summary": "Add a prediction change type",
        "operationId": "addUsingPOST_56",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Prediction change type successfully created",
            "schema": {
              "$ref": "#/definitions/TypePredictionChangeBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/prediction_change_type/{predictionChangeTypeId}": {
      "put": {
        "tags": [
          "Prediction Change Types"
        ],
        "summary": "Update a prediction change type",
        "operationId": "updateUsingPUT_55",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "predictionChangeTypeId",
            "in": "path",
            "description": "predictionChangeTypeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypePredictionChangeBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Prediction Change Types"
        ],
        "summary": "Delete a prediction change type",
        "operationId": "deleteUsingDELETE_56",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "predictionChangeTypeId",
            "in": "path",
            "description": "predictionChangeTypeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/process_types": {
      "get": {
        "tags": [
          "Process Types"
        ],
        "summary": "Get all process types",
        "operationId": "getUsingGET_60",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeProcessBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/process_type": {
      "post": {
        "tags": [
          "Process Types"
        ],
        "summary": "Add a process type",
        "operationId": "addUsingPOST_57",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Process type successfully created",
            "schema": {
              "$ref": "#/definitions/TypeProcessBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/process_type/{processTypeId}": {
      "put": {
        "tags": [
          "Process Types"
        ],
        "summary": "Update a process type",
        "operationId": "updateUsingPUT_56",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "processTypeId",
            "in": "path",
            "description": "typeProcessId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeProcessBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Process Types"
        ],
        "summary": "Delete a process type",
        "operationId": "deleteUsingDELETE_57",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "processTypeId",
            "in": "path",
            "description": "typeProcessId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/professional_category_types": {
      "get": {
        "tags": [
          "Professional Category Types"
        ],
        "summary": "Get all professional category types",
        "operationId": "getUsingGET_47",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeCategoryProfessionalBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/professional_category_type": {
      "post": {
        "tags": [
          "Professional Category Types"
        ],
        "summary": "Add a professional category type",
        "operationId": "addUsingPOST_44",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCategoryProfessionalBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Professional category type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/professional_category_type/{professionalTypeCategoryId}": {
      "put": {
        "tags": [
          "Professional Category Types"
        ],
        "summary": "Update\t a professional category type",
        "operationId": "updateUsingPUT_43",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "professionalTypeCategoryId",
            "in": "path",
            "description": "typeCategoryProfessionalId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCategoryProfessionalBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Professional Category Types"
        ],
        "summary": "Delete a professional category types",
        "operationId": "deleteUsingDELETE_44",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "professionalTypeCategoryId",
            "in": "path",
            "description": "typeCategoryProfessionalId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire_evaluations": {
      "get": {
        "tags": [
          "Questionnaire Evaluations"
        ],
        "summary": "Get all questionnaire evaluations",
        "operationId": "getUsingGET_37",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionnaireEvaluationBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire_evaluation": {
      "post": {
        "tags": [
          "Questionnaire Evaluations"
        ],
        "summary": "Add a questionnaire evaluation",
        "operationId": "addUsingPOST_33",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionnaireEvaluationBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Questionnaire evaluation successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire_evaluation/{questionnaireEvaluationId}": {
      "put": {
        "tags": [
          "Questionnaire Evaluations"
        ],
        "summary": "Update a questionnaire evaluation",
        "operationId": "updateUsingPUT_33",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "questionnaireEvaluationId",
            "in": "path",
            "description": "questionnaireEvaluationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionnaireEvaluationBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Questionnaire Evaluations"
        ],
        "summary": "Delete a questionnaire evaluation",
        "operationId": "deleteUsingDELETE_33",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "questionnaireEvaluationId",
            "in": "path",
            "description": "questionnaireEvaluationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire/{questionnaireId}/version": {
      "put": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Version a questionnaire",
        "operationId": "versionQuestionnaireUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "questionnaireId",
            "in": "path",
            "description": "questionnaireId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionBO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaires": {
      "get": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Get all questionnaires",
        "operationId": "getUsingGET_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionnaireBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaires/audition": {
      "get": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Get all questionnaires for audited user",
        "operationId": "getQuestionnairesAuditirion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionnaireBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire": {
      "post": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Add a questionnaire",
        "operationId": "addUsingPOST_32",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionnaireBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Questionnaire successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire/audition": {
      "post": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Add a questionnaire for audited user",
        "operationId": "addQuestionnaireAudtion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionnaireBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Questionnaire successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire/evaluations/reading": {
      "put": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Mark questionnaire evaluations as read",
        "operationId": "addQuestionnaireAudtionRead",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "List of evaluations ids to be mark as readed",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire/{questionnaireId}": {
      "put": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Update a questionnaire",
        "operationId": "updateUsingPUT_32",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "questionnaireId",
            "in": "path",
            "description": "questionnaireId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionnaireBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Delete a questionnaire",
        "operationId": "deleteUsingDELETE_32",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "questionnaireId",
            "in": "path",
            "description": "questionnaireId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire/{questionnaireId}/questions": {
      "get": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Get questions from a questionnaire",
        "operationId": "getQuestionFromQuestionnaireIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "questionnaireId",
            "in": "path",
            "description": "questionnaireId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionBO"
              }
            }
          },
          "201": {
            "description": "Questions from questionnaire successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questions": {
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "Get all questions",
        "operationId": "getUsingGET_35",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuestionBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/question": {
      "post": {
        "tags": [
          "Questions"
        ],
        "summary": "Add a question",
        "operationId": "addUsingPOST_31",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Question successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/question/{questionId}": {
      "put": {
        "tags": [
          "Questions"
        ],
        "summary": "Update a question",
        "operationId": "updateUsingPUT_31",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "description": "questionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Questions"
        ],
        "summary": "Delete a question",
        "operationId": "deleteUsingDELETE_31",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "description": "questionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "Get all regions",
        "operationId": "getUsingGET_39",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegionBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/region": {
      "post": {
        "tags": [
          "Regions"
        ],
        "summary": "Add a region",
        "operationId": "addUsingPOST_35",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegionBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Region successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/region/{regionId}": {
      "put": {
        "tags": [
          "Regions"
        ],
        "summary": "Update a region",
        "operationId": "updateUsingPUT_35",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "regionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegionBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Regions"
        ],
        "summary": "Delete a region",
        "operationId": "deleteUsingDELETE_35",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "regionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/risk_matrices": {
      "get": {
        "tags": [
          "Risk Matrices"
        ],
        "summary": "Get all risk matrices",
        "operationId": "getUsingGET_20",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MatrixRiskBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/risk_matrix": {
      "post": {
        "tags": [
          "Risk Matrices"
        ],
        "summary": "Add a risk matrix",
        "operationId": "addUsingPOST_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MatrixRiskBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Risk matrix successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/risk_matrix/{riskMatrixId}": {
      "get": {
        "tags": [
          "Risk Matrices"
        ],
        "summary": "Get a risk matrix",
        "operationId": "getRiskMatrixOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "riskMatrixId",
            "in": "path",
            "description": "Matrix risk identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved object",
            "schema": {
              "$ref": "#/definitions/MatrixRiskBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Risk Matrices"
        ],
        "summary": "Update a risk matrix",
        "operationId": "updateUsingPUT_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "riskMatrixId",
            "in": "path",
            "description": "matrixRiskId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MatrixRiskBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Risk Matrices"
        ],
        "summary": "Delete a risk matrix",
        "operationId": "deleteUsingDELETE_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "riskMatrixId",
            "in": "path",
            "description": "matrixRiskId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/risk_matrix_valuations": {
      "get": {
        "tags": [
          "Risk Matrix Valuations"
        ],
        "summary": "Get all risk matrix valuations",
        "operationId": "getUsingGET_21",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MatrixRiskValuationBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/risk_matrix_valuation": {
      "post": {
        "tags": [
          "Risk Matrix Valuations"
        ],
        "summary": "Add a risk matrix valuation",
        "operationId": "addUsingPOST_20",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MatrixRiskValuationBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Risk matrix valuation successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/risk_matrix_valuation/{riskMatrixValuationId}": {
      "put": {
        "tags": [
          "Risk Matrix Valuations"
        ],
        "summary": "Update a risk matrix valuation",
        "operationId": "updateUsingPUT_20",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "riskMatrixValuationId",
            "in": "path",
            "description": "matrixRiskValuationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MatrixRiskValuationBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Risk Matrix Valuations"
        ],
        "summary": "Delete a risk matrix valuation",
        "operationId": "deleteUsingDELETE_20",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "riskMatrixValuationId",
            "in": "path",
            "description": "matrixRiskValuationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/role_types": {
      "get": {
        "tags": [
          "Role Types"
        ],
        "summary": "Get all role types",
        "operationId": "getUsingGET_63",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeRoleBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/role_type": {
      "post": {
        "tags": [
          "Role Types"
        ],
        "summary": "Add a role type",
        "operationId": "addUsingPOST_60",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeRoleBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Role type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/role_type/{roleTypeId}": {
      "put": {
        "tags": [
          "Role Types"
        ],
        "summary": "Update a role type",
        "operationId": "updateUsingPUT_59",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "roleTypeId",
            "in": "path",
            "description": "typeRoleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeRoleBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Role Types"
        ],
        "summary": "Delete a role type",
        "operationId": "deleteUsingDELETE_60",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "roleTypeId",
            "in": "path",
            "description": "typeRoleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/sectors": {
      "get": {
        "tags": [
          "Sectors"
        ],
        "summary": "Get all sectors",
        "operationId": "getUsingGET_40",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List uccessfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SectorBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/sector": {
      "post": {
        "tags": [
          "Sectors"
        ],
        "summary": "Add a sector",
        "operationId": "addUsingPOST_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SectorBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sector successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/sector/{sectorId}": {
      "put": {
        "tags": [
          "Sectors"
        ],
        "summary": "Update a sector",
        "operationId": "updateUsingPUT_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sectorId",
            "in": "path",
            "description": "sectorId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SectorBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sectors"
        ],
        "summary": "Delete a sector",
        "operationId": "deleteUsingDELETE_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sectorId",
            "in": "path",
            "description": "sectorId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/speciality_types": {
      "get": {
        "tags": [
          "Speciality Types"
        ],
        "summary": "Get all speciality types",
        "operationId": "getUsingGET_64",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeSpecialityBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/speciality_type": {
      "post": {
        "tags": [
          "Speciality Types"
        ],
        "summary": "Add a type speciality",
        "operationId": "addUsingPOST_61",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeSpecialityBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Speciality type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/speciality_type/{specialityTypeId}": {
      "put": {
        "tags": [
          "Speciality Types"
        ],
        "summary": "Update a speciality type",
        "operationId": "updateUsingPUT_60",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "specialityTypeId",
            "in": "path",
            "description": "typeSpecialityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeSpecialityBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Speciality Types"
        ],
        "summary": "Delete a speciality type",
        "operationId": "deleteUsingDELETE_61",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "specialityTypeId",
            "in": "path",
            "description": "typeSpecialityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get all tags",
        "operationId": "getUsingGET_41",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/tag": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Add a tag",
        "operationId": "addUsingPOST_37",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tag successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/tag/{tagId}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get tag by id",
        "operationId": "getTagByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "tagId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved tag",
            "schema": {
              "$ref": "#/definitions/TagBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update a tag",
        "operationId": "updateUsingPUT_37",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "tagId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete a tag",
        "operationId": "deleteUsingDELETE_37",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "tagId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/task_documents": {
      "get": {
        "tags": [
          "Task Documents"
        ],
        "summary": "Get all task documents",
        "operationId": "getUsingGET_44",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskDocumentBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/task_document": {
      "post": {
        "tags": [
          "Task Documents"
        ],
        "summary": "Add a task document",
        "operationId": "addUsingPOST_41",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskDocumentBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task document successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/task_document/{taskDocumentId}": {
      "put": {
        "tags": [
          "Task Documents"
        ],
        "summary": "Update a task document",
        "operationId": "updateUsingPUT_40",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskDocumentId",
            "in": "path",
            "description": "taskDocumentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskDocumentBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Task Documents"
        ],
        "summary": "Delete a task document",
        "operationId": "deleteUsingDELETE_41",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskDocumentId",
            "in": "path",
            "description": "taskDocumentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get all tasks",
        "operationId": "getUsingGET_43",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "programJobId",
            "in": "query",
            "description": "Identifier of the prograb job",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/task": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Add a task",
        "operationId": "addUsingPOST_40",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/task/{taskId}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get tasks by Id",
        "operationId": "getTaskUsingGET_40",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Identifier of the task",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "$ref": "#/definitions/TaskBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task",
        "operationId": "updateUsingPUT_39",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a task",
        "operationId": "deleteUsingDELETE_40",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/territorial_areas": {
      "get": {
        "tags": [
          "Territorial Areas"
        ],
        "summary": "Get all territorial areas",
        "operationId": "getUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AreaTerritorialBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/territorial_area": {
      "post": {
        "tags": [
          "Territorial Areas"
        ],
        "summary": "Add a territorial area",
        "operationId": "addUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AreaTerritorialBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Territorial area successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/territorial_area/{territorialAreaId}": {
      "put": {
        "tags": [
          "Territorial Areas"
        ],
        "summary": "Update a territorial area",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "territorialAreaId",
            "in": "path",
            "description": "areaTerritorialId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AreaTerritorialBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Territorial Areas"
        ],
        "summary": "Delete a territorial area",
        "operationId": "deleteUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "territorialAreaId",
            "in": "path",
            "description": "areaTerritorialId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/trace_types": {
      "get": {
        "tags": [
          "Trace Types"
        ],
        "summary": "Get all trace types",
        "operationId": "getUsingGET_69",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeTraceBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/trace_type": {
      "post": {
        "tags": [
          "Trace Types"
        ],
        "summary": "Add a trace type",
        "operationId": "addUsingPOST_66",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeTraceBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Trace type successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/trace_type/{traceTypeId}": {
      "put": {
        "tags": [
          "Trace Types"
        ],
        "summary": "Update a trace type",
        "operationId": "updateUsingPUT_65",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "traceTypeId",
            "in": "path",
            "description": "typeTraceId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeTraceBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Trace Types"
        ],
        "summary": "Delete a trace type",
        "operationId": "deleteUsingDELETE_66",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "traceTypeId",
            "in": "path",
            "description": "typeTraceId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/translation/{relationId}": {
      "put": {
        "tags": [
          "Tag translations"
        ],
        "summary": "Update a tag language association",
        "operationId": "updateUsingPUT_38",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "relationId",
            "in": "path",
            "description": "relationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagLanguageBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tag translations"
        ],
        "summary": "Delete a tag language association",
        "operationId": "deleteUsingDELETE_38",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "relationId",
            "in": "path",
            "description": "relationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tag translations"
        ],
        "summary": "Add a tag translation",
        "operationId": "addUsingPOST_38",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "relationId",
            "in": "path",
            "description": "tagId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagLanguageBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tag translation successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_alarm": {
      "get": {
        "tags": [
          "User Alarm"
        ],
        "summary": "Get all user alarm",
        "operationId": "getUsingGET_71",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAlarmBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "User Alarm"
        ],
        "summary": "Add an user alarm",
        "operationId": "addUsingPOST_68",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAlarmBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User alarm successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_alarm/{userAlarmId}": {
      "put": {
        "tags": [
          "User Alarm"
        ],
        "summary": "Update an user alarm",
        "operationId": "updateUsingPUT_67",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userAlarmId",
            "in": "path",
            "description": "userAlarmId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAlarmBO"
            }
          },
          {
            "name": "store",
            "in": "query",
            "description": "store",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Alarm"
        ],
        "summary": "Delete an user alarm",
        "operationId": "deleteUsingDELETE_68",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userAlarmId",
            "in": "path",
            "description": "userAlarmId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_categories": {
      "get": {
        "tags": [
          "User Categories"
        ],
        "summary": "Get all user categories",
        "operationId": "getUsingGET_73",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserCategoryBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_category": {
      "post": {
        "tags": [
          "User Categories"
        ],
        "summary": "Add an user category",
        "operationId": "addUsingPOST_70",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCategoryBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User category successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_category/{userCategoryId}": {
      "put": {
        "tags": [
          "User Categories"
        ],
        "summary": "Update an user category",
        "operationId": "updateUsingPUT_69",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userCategoryId",
            "in": "path",
            "description": "userCategoryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCategoryBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Categories"
        ],
        "summary": "Delete an user category",
        "operationId": "deleteUsingDELETE_70",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userCategoryId",
            "in": "path",
            "description": "userCategoryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_languages": {
      "get": {
        "tags": [
          "User Languages"
        ],
        "summary": "Get all user languages",
        "operationId": "getUsingGET_74",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserLanguageBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_language": {
      "post": {
        "tags": [
          "User Languages"
        ],
        "summary": "Add an user language",
        "operationId": "addUsingPOST_71",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLanguageBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User language successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_language/{userLanguageId}": {
      "put": {
        "tags": [
          "User Languages"
        ],
        "summary": "Update an user language",
        "operationId": "updateUsingPUT_70",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userLanguageId",
            "in": "path",
            "description": "userLanguageId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLanguageBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Languages"
        ],
        "summary": "Delete an user language",
        "operationId": "deleteUsingDELETE_71",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userLanguageId",
            "in": "path",
            "description": "userLanguageId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_trainings": {
      "get": {
        "tags": [
          "User Trainings"
        ],
        "summary": "Get all user trainings",
        "operationId": "getUsingGET_75",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserTrainingBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_training": {
      "post": {
        "tags": [
          "User Trainings"
        ],
        "summary": "Add an user training",
        "operationId": "addUsingPOST_72",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserTrainingBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User training successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_training/{userTrainingId}": {
      "put": {
        "tags": [
          "User Trainings"
        ],
        "summary": "Update an user training",
        "operationId": "updateUsingPUT_71",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userTrainingId",
            "in": "path",
            "description": "userTrainingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserTrainingBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Trainings"
        ],
        "summary": "Delete an user training",
        "operationId": "deleteUsingDELETE_72",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userTrainingId",
            "in": "path",
            "description": "userTrainingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Get all amap3 users",
        "operationId": "getUsingGET_72",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAmapBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user": {
      "post": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Add an amap3 user",
        "operationId": "addUsingPOST_69",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAmapBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Amap3 user successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/alarms": {
      "get": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Get user alarms",
        "operationId": "getAlarmsByUserUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAlarmBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/os/{organizationalStructureId}": {
      "get": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Get users by organizational structure",
        "operationId": "getUserByOrganizationalStructureUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "organizationalStructureId",
            "in": "path",
            "description": "organizationalStructureId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAmapBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/profile": {
      "get": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Get the user profile of a authenticated user",
        "operationId": "getUserProfileUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "schema": {
              "$ref": "#/definitions/UserAmapBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user/profile": {
      "post": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Create an user profile",
        "operationId": "addUserProfile - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfileBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/roles": {
      "get": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Get users by role",
        "operationId": "getUsersByRoleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "txtTypeRole",
            "in": "query",
            "description": "txtTypeRole",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAmapBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user/{userAmapId}": {
      "get": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Get an amap3 users",
        "operationId": "getUsingGET_150",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userAmapId",
            "in": "path",
            "description": "Nuuma of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "$ref": "#/definitions/UserAmapBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Update an amap3 user",
        "operationId": "updateUsingPUT_68",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userAmapId",
            "in": "path",
            "description": "userAmapId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAmapBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Delete an amap3 user",
        "operationId": "deleteUsingDELETE_69",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userAmapId",
            "in": "path",
            "description": "userAmapId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user/evaluations": {
      "get": {
        "tags": [
          "AuditMap Users"
        ],
        "summary": "Get all user evaluations",
        "operationId": "getUserEvaluations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "exercise",
            "in": "query",
            "description": "Year of exercise",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobEvaluations",
            "in": "query",
            "description": "Job evaluations",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "schema": {
              "$ref": "#/definitions/UserProfileBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/recommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get all recommendations",
        "operationId": "getByFactObserverIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "factObserverId",
            "in": "query",
            "description": "Identifier/s of a fact observer",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Identifier of a job",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecommendationBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/filtered_recommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get recommendations by query params with pagination",
        "operationId": "getUsingFilteredRecommendations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the recommendation",
            "required": false,
            "type": "string"
          },
          {
            "name": "criticallyIds",
            "in": "query",
            "description": "Identifier of criticallies",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "statusIds",
            "in": "query",
            "description": "Identifier of the status",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dueDate",
            "in": "query",
            "description": "Due date of the recommendation",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "jobStatusIds",
            "in": "query",
            "description": "Identifier of the job sattus",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page request",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of each page",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecommendationBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/recommendation": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Create a recommendation",
        "operationId": "addUsingPOST_34",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecommendationBO"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Recommendations successfully created",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "description": "Identifiers of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Update a fact observer rdn",
        "operationId": "updateUsingPUT_34",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecommendationBO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recommendations successfully updated",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "description": "Identifiers of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/recommendation/{recommendationId}": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get all fact observer rdn",
        "operationId": "getByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "recommendationId",
            "in": "path",
            "description": "Identifier of the recommendation",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Identifier of the job",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecommendationBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/recommendation/{recommendationId}/code/{codeId}": {
      "delete": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Delete a fact observer rdn",
        "operationId": "deleteRecUsingDELETE_31",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "recommendationId",
            "in": "path",
            "description": "Identifier of the recommendation",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "codeId",
            "in": "path",
            "description": "Code of every relation of the recommendation with facts observers or other items",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "201": {
            "description": "Successfully deleted recommendation",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/recommendations/comments": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get comments on recommendations",
        "operationId": "getCommentsOnRecommendations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "recommendationIds",
            "in": "query",
            "description": "Identifiers of recommendations",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecommendationCommentBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/exported_recommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Export recommendations filtered by query params",
        "operationId": "exportRecommendationsByFilters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the recommendation",
            "required": false,
            "type": "string"
          },
          {
            "name": "criticallyIds",
            "in": "query",
            "description": "Identifier of criticallies",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "statusIds",
            "in": "query",
            "description": "Identifier of the status",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dueDate",
            "in": "query",
            "description": "Due date of the recommendation",
            "required": false,
            "type": "string",
            "format": "date_time"
          },
          {
            "name": "jobStatusIds",
            "in": "query",
            "description": "Identifier of the job sattus",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page request",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of each page",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The file was downloaded",
            "schema": {
              "type": "string",
              "description": "File identifier"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/types_critique_fact": {
      "get": {
        "tags": [
          "Type Critique Fact"
        ],
        "summary": "Get all types of critique facts",
        "operationId": "getTypesCritiqueFactUsingGET_51",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeCritiqueFactBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/type_critique_fact": {
      "post": {
        "tags": [
          "Type Critique Fact"
        ],
        "summary": "Create a tpye of critique fact",
        "operationId": "addTypeCritiqueFact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Type critique fact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCritiqueFactBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/type_critique_fact/{typeCritiqueFactId}": {
      "put": {
        "tags": [
          "Type Critique Fact"
        ],
        "summary": "Update an type of critique fact",
        "operationId": "updateTypeCritiqueFact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeCritiqueFactId",
            "in": "path",
            "description": "Identifier of the type critique fact",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Type critique fact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCritiqueFactBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Type Critique Fact"
        ],
        "summary": "Delete a type critique fact",
        "operationId": "deleteTypeCritiqueFact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeCritiqueFactId",
            "in": "path",
            "description": "Identifier of the type critique fact",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/types_risk": {
      "get": {
        "tags": [
          "Type Risk"
        ],
        "summary": "Get all type risk",
        "operationId": "getAllUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeRiskBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/types_status_recommendation": {
      "get": {
        "tags": [
          "Type Status Recommendation"
        ],
        "summary": "Get all types of status recommendations",
        "operationId": "getAllUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeStatusRecommendationBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/type_status_recommendation": {
      "post": {
        "tags": [
          "Type Status Recommendation"
        ],
        "summary": "Create a type of status recommendation",
        "operationId": "addTypeStatusRecommendation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Type status recommendation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStatusRecommendationBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/type_status_recommendation/{typeStatusRecomId}": {
      "put": {
        "tags": [
          "Type Status Recommendation"
        ],
        "summary": "Update a type of status recommendation",
        "operationId": "updateTypeStatusRecommendation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeStatusRecomId",
            "in": "path",
            "description": "Identifier of type status recommendation",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Type status recommendation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStatusRecommendationBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Type Status Recommendation"
        ],
        "summary": "Delete a type of status recommendation",
        "operationId": "deleteTypeStatusRecommendation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeStatusRecomId",
            "in": "path",
            "description": "Identifier of type status recommendation",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get all reports of a job",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "Identifier of the job",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/exported_reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Export reports by params",
        "operationId": "exportReportsByFilters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "Identifier of the job",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The file was uploaded",
            "schema": {
              "type": "number",
              "description": "File identifier"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/report": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Add a report",
        "operationId": "addReportUsingPOST_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Report successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/report/{reportId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get report by id",
        "operationId": "getByIdUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Identifier of the report",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Report successfully retrieved",
            "schema": {
              "$ref": "#/definitions/ReportBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Update a report",
        "operationId": "updateReportUsingPUT_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Identifier of the report",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Delete a report",
        "operationId": "deleteReportsUsingDELETE_33",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Identifier of the report",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Successfully deleted report",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/report/{reportId}/emit": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Generate and send to an user a report of the job",
        "operationId": "emitReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Identifier of the report",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "201": {
            "description": "Report emit successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/report/{reportId}/generate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Generate a report",
        "operationId": "generateReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Identifier of the report",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Report type",
            "required": true,
            "type": "string",
            "enum": [
              "PDF",
              "DOC"
            ]
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Report successfully generated",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/types_valoration_report": {
      "get": {
        "tags": [
          "Valoration Report Types"
        ],
        "summary": "Get all valoration report types",
        "operationId": "getTypesValorationReportUsingGET_70",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeValorationReportBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/type_valoration_report": {
      "post": {
        "tags": [
          "Valoration Report Types"
        ],
        "summary": "Create a type of valoration report",
        "operationId": "addTypeValorationReport - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeValorationReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/type_valoration_report/{typeValorationReportId}": {
      "put": {
        "tags": [
          "Valoration Report Types"
        ],
        "summary": "Update a type of valoration report",
        "operationId": "updateTypeValorationReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeValorationReportId",
            "in": "path",
            "description": "Identifier of valoration type report",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Type valoration report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeValorationReportBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Valoration Report Types"
        ],
        "summary": "Delete a type of valoration report",
        "operationId": "deleteTypeValorationReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeValorationReportId",
            "in": "path",
            "description": "Identifier of valoration type report",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/types_structure_report": {
      "get": {
        "tags": [
          "Structure Report Types"
        ],
        "summary": "Get all structure report types",
        "operationId": "getUsingGET_67",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeValorationReportBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/type_structure_report": {
      "post": {
        "tags": [
          "Structure Report Types"
        ],
        "summary": "Create a type sructure report",
        "operationId": "addTypeStructureReport - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStructureReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/type_structure_report/{typeStructureReportId}": {
      "put": {
        "tags": [
          "Structure Report Types"
        ],
        "summary": "Update a type structure report",
        "operationId": "updateTypeStructureReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeStructureReportId",
            "in": "path",
            "description": "Identifier of type structure report",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Type structure report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStructureReportBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Structure Report Types"
        ],
        "summary": "Delete a type of structure reports",
        "operationId": "deleteTypeStructureReports",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeStructureReportId",
            "in": "path",
            "description": "Identifier of type structure report",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/types_status_report": {
      "get": {
        "tags": [
          "Status Report Types"
        ],
        "summary": "Get all status report types",
        "operationId": "getTSRUsingGET_66",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeValorationReportBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/types_valoration_process": {
      "get": {
        "tags": [
          "Valoration Process Types"
        ],
        "summary": "Get all valoration process types",
        "operationId": "getTVPUsingGET_69",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrevied",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeValorationReportBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget_trackings": {
      "get": {
        "tags": [
          "Budget tracking"
        ],
        "summary": "Get all budget tracking",
        "operationId": "getBudgetTracksUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetTrackingBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget_tracking": {
      "post": {
        "tags": [
          "Budget tracking"
        ],
        "summary": "Add a budget tracking",
        "operationId": "addBudgetTrackingUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetTrackingBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Business unit successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget_tracking/{budgetTrackingId}": {
      "get": {
        "tags": [
          "Budget tracking"
        ],
        "summary": "Get budget information by id (trackings)",
        "operationId": "getBudgetTrackingUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "budgetTrackingId",
            "in": "path",
            "description": "Budget identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "changeToEuro",
            "in": "query",
            "description": "Change to euro",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Report successfully retrieved",
            "schema": {
              "$ref": "#/definitions/BudgetTrackingBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Budget tracking"
        ],
        "summary": "Update a budget tracking",
        "operationId": "updateBudgetTrackingPutUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "budgetTrackingId",
            "in": "path",
            "description": "Budget tracking identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetTrackingBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Budget tracking"
        ],
        "summary": "Delete a budget tracking",
        "operationId": "deleteBudgetTrackingUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "budgetTrackingId",
            "in": "path",
            "description": "Budget tracking identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/files/upload": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Save a file in the database",
        "operationId": "getFileUploadedUrl",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "File attributes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The file was uploaded",
            "schema": {
              "type": "number",
              "description": "File identifier"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/files/download": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Download a file",
        "operationId": "getFileDownloadedUrl",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "File attributes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetTrackingBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The file was uploaded",
            "schema": {
              "type": "number",
              "description": "File identifier"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/additional_proposals": {
      "get": {
        "tags": [
          "Additional Proposal"
        ],
        "summary": "Get additional proposals",
        "operationId": "getAddProposalGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "programJobId",
            "in": "query",
            "description": "Program job identifier",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Job identifier",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdditionalProposalBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/additional_proposal": {
      "post": {
        "tags": [
          "Additional Proposal"
        ],
        "summary": "Add an additional proposal",
        "operationId": "addAdditionalProposal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Additional proposal",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdditionalProposalBO"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Additional proposal successfully created",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Additional Proposal"
        ],
        "summary": "Update an additional proposal",
        "operationId": "updateAdditionalProposal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Additional proposal",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdditionalProposalBO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/additional_proposal/{additionalProposalId}/export": {
      "post": {
        "tags": [
          "Additional Proposal"
        ],
        "summary": "Exports and additional proposal",
        "operationId": "addExportAdditionalProposal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "additionalProposalId",
            "in": "path",
            "description": "Additional proposal identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Additional proposal",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdditionalProposalBO"
            }
          },
          {
            "name": "jobId",
            "in": "query",
            "description": "Job identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/additional_proposal/{additionalProposalId}": {
      "delete": {
        "tags": [
          "Additional Proposal"
        ],
        "summary": "Delete an additional proposal",
        "operationId": "deleteAdditionalProposal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "additionalProposalId",
            "in": "path",
            "description": "Identifier of the additional proposal",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Code",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/node_state_types": {
      "get": {
        "tags": [
          "Node State Type"
        ],
        "summary": "Get type status nodes",
        "operationId": "getTypeStatusNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeStateNodeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/node_state_type": {
      "post": {
        "tags": [
          "Node State Type"
        ],
        "summary": "Create a type of node state",
        "operationId": "addTypeNodeState - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Type of node state",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStateNodeBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/node_state_type/{stateNodeTypeId}": {
      "put": {
        "tags": [
          "Node State Type"
        ],
        "summary": "Update a type of node state",
        "operationId": "updateTypeNodeState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stateNodeTypeId",
            "in": "path",
            "description": "Identifier of type node state",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Type node state",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeStateNodeBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Node State Type"
        ],
        "summary": "Delete a type of node state",
        "operationId": "deleteTypeNodeState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stateNodeTypeId",
            "in": "path",
            "description": "Identifier of node state type",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget_expense_types": {
      "get": {
        "tags": [
          "Budget Expense Types"
        ],
        "summary": "Get all types of expense",
        "operationId": "getBudgetExpenseTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeBudgetExpenseTreeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget_expense_type": {
      "post": {
        "tags": [
          "Budget Expense Types"
        ],
        "summary": "Create a budget expense type",
        "operationId": "addBudgetExpenseType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeBudgetExpenseBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/budget_expense_type/{budgetExpenseTypeId}": {
      "put": {
        "tags": [
          "Budget Expense Types"
        ],
        "summary": "Update a budget expense type",
        "operationId": "updateTypeBudgetExpenseType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "budgetExpenseTypeId",
            "in": "path",
            "description": "Identifier of budget expense type",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Type budget expense",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeBudgetExpenseBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Budget Expense Types"
        ],
        "summary": "Delete a type of structure reports",
        "operationId": "deleteTypeBudgetExpense",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "budgetExpenseTypeId",
            "in": "path",
            "description": "Identifier of budget expense type",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_companies": {
      "get": {
        "tags": [
          "External Companies"
        ],
        "summary": "Get all external companies",
        "operationId": "getExternalCompanies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalCompanyBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_company": {
      "post": {
        "tags": [
          "External Companies"
        ],
        "summary": "Create a external company",
        "operationId": "addExternalCompany - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalCompanyBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_company/{idExternalCompanyPK}": {
      "put": {
        "tags": [
          "External Companies"
        ],
        "summary": "Update an external company",
        "operationId": "updateExternalCompany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idExternalCompanyPK",
            "in": "path",
            "description": "Identifier of the external company",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "External company",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalCompanyBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_report_types": {
      "get": {
        "tags": [
          "External Report Types"
        ],
        "summary": "Get all external report types",
        "operationId": "getExternalReportTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeExternalReportBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_report_type": {
      "post": {
        "tags": [
          "External Report Types"
        ],
        "summary": "Create a external report type",
        "operationId": "addExternalReportType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "External report type",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeExternalReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_report_type/{idTypeExternalReportPK}": {
      "put": {
        "tags": [
          "External Report Types"
        ],
        "summary": "Update an external report type",
        "operationId": "updateExternalReportType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idTypeExternalReportPK",
            "in": "path",
            "description": "Identifier of external type report",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "External report type",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeExternalReportBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_audit_types": {
      "get": {
        "tags": [
          "External Audit Types"
        ],
        "summary": "Get all external audit types",
        "operationId": "getExternalAuditTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeExternalAuditBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_audit_type": {
      "post": {
        "tags": [
          "External Audit Types"
        ],
        "summary": "Create a external audit type",
        "operationId": "addExternalAuditType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Type external audit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeExternalAuditBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_audit_type/{idTypeExternalAuditPK}": {
      "put": {
        "tags": [
          "External Audit Types"
        ],
        "summary": "Update an external audit type",
        "operationId": "updateExternalAuditType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idTypeExternalAuditPK",
            "in": "path",
            "description": "Identifier of type external audit",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Type external audit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeExternalAuditBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/visibility_rule_types": {
      "get": {
        "tags": [
          "Visibility Rule Types"
        ],
        "summary": "Get all visibility rule types",
        "operationId": "getVisibilityRuleType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeVisibilityRuleBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/visibility_rule_type": {
      "post": {
        "tags": [
          "Visibility Rule Types"
        ],
        "summary": "Create a visibility rule types",
        "operationId": "addVisibilityRuleType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Visibility rule type",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeVisibilityRuleBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/visibility_rule_type/{typeVisibilityRuleId}": {
      "put": {
        "tags": [
          "Visibility Rule Types"
        ],
        "summary": "Update a visibility rule types",
        "operationId": "updateVisibilityRuleType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeVisibilityRuleId",
            "in": "path",
            "description": "Identifier of visibility rule type",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Visibility rule type",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeVisibilityRuleBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Visibility Rule Types"
        ],
        "summary": "Delete a visibility rule type",
        "operationId": "deleteVisibilityRuleType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeVisibilityRuleId",
            "in": "path",
            "description": "IDentifier of visibility rule type",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_visibility_rule_types": {
      "get": {
        "tags": [
          "User Visibility Rule Types"
        ],
        "summary": "Get all user visibility rule types",
        "operationId": "getUserVisibilityRuleType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeUserVisibilityRuleBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_visibility_rule_type": {
      "post": {
        "tags": [
          "User Visibility Rule Types"
        ],
        "summary": "Create a user visibility rule types",
        "operationId": "addUserVisibilityRuleType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeUserVisibilityRuleBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user_visibility_rule_type/{typeUserVisibilityRuleId}": {
      "put": {
        "tags": [
          "User Visibility Rule Types"
        ],
        "summary": "Update a user visibility rule types",
        "operationId": "updateUserVisibilityRuleType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeUserVisibilityRuleId",
            "in": "path",
            "description": "Identifier of type user visibility rule",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Type user visibility rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeUserVisibilityRuleBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Visibility Rule Types"
        ],
        "summary": "Delete a user visibility rule type",
        "operationId": "deleteUserVisibilityRuleType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeUserVisibilityRuleId",
            "in": "path",
            "description": "typeUserVisibilityRuleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/activity_types": {
      "get": {
        "tags": [
          "Activity Types"
        ],
        "summary": "Get all activity types",
        "operationId": "getActivityTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeActivityBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/activity_type": {
      "post": {
        "tags": [
          "Activity Types"
        ],
        "summary": "Create an activity types",
        "operationId": "addActivityTypes - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Type activity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeActivityBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/activity_type/{typeActivityId}": {
      "put": {
        "tags": [
          "Activity Types"
        ],
        "summary": "Update an activity type",
        "operationId": "updateActivityType - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeActivityId",
            "in": "path",
            "description": "Identifier of activity type",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Activity type",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeActivityBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activity Types"
        ],
        "summary": "Delete an activity type",
        "operationId": "deleteActivityType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "typeActivityId",
            "in": "path",
            "description": "Type activity identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/recommendation/action_plan/reversion": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Revert an action plan of a recommendation",
        "operationId": "addRevertRecommendation - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Action plan of the recommendation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecommendationActionPlanBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/recommendation/action_plan/sending": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Send an action plan of a recommendation",
        "operationId": "addSendRecommendation - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Action plan of the recommendation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecommendationActionPlanBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/recommendation/action_plan": {
      "put": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Change status of a recommendation",
        "operationId": "addSendRecommendationStatus - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Action plan of the recommendation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecommendationActionPlanBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Add action plans by recommendation",
        "operationId": "createActionPlanByRecommendation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecommendationActionPlanBO"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Action plans successfully created",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "description": "Identifiers of the object that was created"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/report/redistribution": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Redistribute a report",
        "operationId": "addReportRedistribute - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/reports/audition": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get all reports visible to the audited",
        "operationId": "getUserReportsAudited",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "description": "Version of report",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/report/comment": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Comment a report",
        "operationId": "addReportComment - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Comment to the report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/report/reading": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Read a report",
        "operationId": "addReportRead - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/report/review": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Review a report",
        "operationId": "addReportReview - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/recommendation/comment": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Add comment to the recommendation",
        "operationId": "addRecommendationComment - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "comment",
            "description": "Comment of the recommendation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecommendationCommentBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/activities": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Get activities",
        "operationId": "getActivity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/activity": {
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "Create an activity",
        "operationId": "addActivity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Activity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivityBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/activity/{idActivityPk}": {
      "put": {
        "tags": [
          "Activities"
        ],
        "summary": "Update an activity",
        "operationId": "updateActivity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idActivityPk",
            "in": "path",
            "description": "Identifier of the activity",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Activity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivityBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Activities"
        ],
        "summary": "Delete an activity",
        "operationId": "deleteActivity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idActivityPk",
            "in": "path",
            "description": "Identifier of the activity",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_audits": {
      "get": {
        "tags": [
          "External Audits"
        ],
        "summary": "Get external audits",
        "operationId": "getExternalAudits",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalAuditBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_audit": {
      "post": {
        "tags": [
          "External Audits"
        ],
        "summary": "Create an external audit",
        "operationId": "addExternalAudit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "External audit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalAuditBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/external_audit/{idExternalAuditPk}": {
      "put": {
        "tags": [
          "External Audits"
        ],
        "summary": "Update an external audit",
        "operationId": "updateExternalAudit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idExternalAuditPk",
            "in": "path",
            "description": "Identifier of the external audit",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "External audit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalAuditBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "External Audits"
        ],
        "summary": "Delete an external audit",
        "operationId": "deleteExternalAudit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "idExternalAuditPk",
            "in": "path",
            "description": "Identifier of the external audit",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/deal_comittees": {
      "get": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Get deal comittees",
        "operationId": "getDealComitees",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DealComitteeBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/deal_comittee": {
      "post": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Create a deal comittee",
        "operationId": "adddDealComitee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "Deal comittee",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealComitteeBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/deal_comittee/{dealComitteeId}": {
      "put": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Update an deal comittee",
        "operationId": "updateDealComittee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "dealComitteeId",
            "in": "path",
            "description": "Identifier of the deal comittee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Deal comittee",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealComitteeBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Delete a deal comittee",
        "operationId": "deleteDealComittee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "dealComitteeId",
            "in": "path",
            "description": "Identifier of deal comittee",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Get a deal comittee",
        "operationId": "getDealComitteeOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "dealComitteeId",
            "in": "path",
            "description": "Deal comittee identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved object",
            "schema": {
              "$ref": "#/definitions/DealComitteeBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/deal_comittee/{dealComitteeId}/entrances": {
      "get": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Get deal comittees entrances",
        "operationId": "getDealComiteesEntrances",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "dealComitteeId",
            "in": "path",
            "description": "Identifier of the deal comittee",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DealComitteeEntranceBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/deal_comittee/{dealComitteeId}/entrance": {
      "post": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Create a deal comittee entrance",
        "operationId": "adddDealComiteeEntrance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "dealComitteeId",
            "in": "path",
            "description": "Identifier of the deal comittee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Deal comittee entrance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealComitteeEntranceBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/deal_comittee/{dealComitteeId}/entrance/{dealComitteeEntranceId}": {
      "put": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Update an deal comittee entrance",
        "operationId": "updateDealComitteeEntrance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "dealComitteeId",
            "in": "path",
            "description": "Identifier of the deal comittee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dealComitteeEntranceId",
            "in": "path",
            "description": "Identifier of the deal comittee entrance",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Deal comittee entrance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealComitteeEntranceBO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was updated"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Delete a deal comittee entrance",
        "operationId": "deleteDealComitteeEntrance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "dealComitteeId",
            "in": "path",
            "description": "Identifier of the deal comittee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dealComitteeEntranceId",
            "in": "path",
            "description": "Identifier of the deal comittee entrance",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number",
              "description": "Identifier of the object that was deleted"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "Deal Comittees"
        ],
        "summary": "Get a deal comittee entrance",
        "operationId": "getDealComitteeEntranceOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "dealComitteeId",
            "in": "path",
            "description": "Identifier of the deal comittee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dealComitteeEntranceId",
            "in": "path",
            "description": "Identifier of the deal comittee entrance",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved object",
            "schema": {
              "$ref": "#/definitions/DealComitteeEntranceBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/type_status_action_plan": {
      "get": {
        "tags": [
          "Type Status Action Plan"
        ],
        "summary": "Get status types for action plans",
        "operationId": "getTypeStatusActionPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeStatusActionPlanBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/report/{reportId}/comment": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Comment a report by report id",
        "operationId": "addReportCommentByReportId - application/json",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "typeCategoryAlarmId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Comment to the report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentReportBO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Succesfully created"
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "The request could not be completed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/questionnaire_types": {
      "get": {
        "tags": [
          "Questionnaire"
        ],
        "summary": "Get questionnaire types",
        "operationId": "getQuestionnaireTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeQuestionnaireBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/global_search": {
      "get": {
        "tags": [
          "Global Search"
        ],
        "summary": "Get info of global search",
        "operationId": "getGlobalSearchInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of what you are looking for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GlobalSearchBO"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/dashboard_info": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get information to display on the dashboard",
        "operationId": "getDashboardInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Info successfully retrieved",
            "schema": {
              "$ref": "#/definitions/DashboardInfoBO"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "You are not authorized to view the resource",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The resource you were trying to reach is not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "basicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "WeightBO": {
      "type": "object",
      "description": "Weitght of a organizational structure",
      "properties": {
        "idOrganizationalStructurePk": {
          "type": "integer",
          "format": "int64"
        },
        "weight": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TypeOrganizationalStructureBO": {
      "type": "object",
      "description": "Type of Mapfre organizational structure",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkAuditable": {
          "type": "boolean",
          "example": false,
          "description": "If it is auditable"
        },
        "txtType": {
          "type": "string",
          "description": "Type text",
          "enum": [
            "SAI",
            "UAI",
            "ENTIDAD",
            "DIRECCION"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "UserTrainingBO": {
      "type": "object",
      "description": "Training of an user",
      "properties": {
        "dateFinish": {
          "type": "string",
          "format": "date_time",
          "description": "Final date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateStart": {
          "type": "string",
          "format": "date_time",
          "description": "Initial date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTrainingPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "nmrExerciese": {
          "type": "string",
          "format": "date_time",
          "description": "Exercise number"
        },
        "txtCenter": {
          "type": "string",
          "description": "Center"
        },
        "txtComment": {
          "type": "string",
          "description": "Comment text"
        },
        "txtTitle": {
          "type": "string",
          "description": "Title"
        },
        "userAmap": {
          "description": "User",
          "$ref": "#/definitions/UserAmapBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "QuestionnaireEvaluationBO": {
      "type": "object",
      "description": "Evaluation question of a questionnaire",
      "properties": {
        "dateCumplimentation": {
          "type": "string",
          "format": "date_time",
          "description": "Cumplimentation date"
        },
        "dateEmision": {
          "type": "string",
          "format": "date_time",
          "description": "Emision date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateReading": {
          "type": "string",
          "format": "date_time",
          "description": "Reading date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idEvaluacionPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "idJobFk": {
          "type": "number",
          "description": "Job"
        },
        "idUserCompliant": {
          "type": "number",
          "description": "User that makes the evaluation"
        },
        "idUserEvaluation": {
          "type": "number",
          "description": "User that was evaluated in the evaluation"
        },
        "nrmEvaluation": {
          "type": "number",
          "description": "Evaluation number"
        },
        "questionnaireQuestion": {
          "description": "Questionnaire's Questions",
          "$ref": "#/definitions/QuestionnaireQuestionBO"
        },
        "txtEvaluation": {
          "type": "string",
          "description": "Evaluation text"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User Modification"
        }
      }
    },
    "LanguageBO": {
      "type": "object",
      "description": "Language that will be used in Auditmap 3",
      "properties": {
        "idLanguagePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "mrkPossibleTranslation": {
          "type": "boolean",
          "example": false,
          "description": "If it is a possible translation"
        },
        "txtName": {
          "type": "string",
          "description": "Name",
          "enum": [
            "TURCO",
            "INGLES",
            "ESPAÑOL",
            "FRANCES",
            "ALEMAN",
            "ITALIANO",
            "PORTUGUES"
          ]
        }
      }
    },
    "TypeStatusBudgetBO": {
      "type": "object",
      "description": "Status of a budget",
      "properties": {
        "budgets": {
          "type": "array",
          "description": "Budget list",
          "items": {
            "$ref": "#/definitions/BudgetBO"
          }
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification user"
        },
        "idTypeStatusBudgetPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "txtTypeStatusBudget": {
          "type": "string",
          "description": "Budget status type text",
          "enum": [
            "INICIADO",
            "PRE-CERRADO",
            "CERRADO"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeReasonCloseBO": {
      "type": "object",
      "description": "Types of reason to close a job",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idReasonClosePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "jobs": {
          "type": "array",
          "description": "Job list",
          "items": {
            "$ref": "#/definitions/JobBO"
          }
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "txtReason": {
          "type": "string",
          "description": "Reason text",
          "enum": [
            "CANCELACION_TRBJO_INDIS_RECURSOS",
            "CANCELACION_TRBJO_OTRAS_CAUSAS",
            "OTROS"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TagBO": {
      "type": "object",
      "description": "Tag to tag some enttites of Auditmap3",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateLastUse": {
          "type": "string",
          "format": "date_time",
          "description": "Last use date"
        },
        "globalTag": {
          "type": "boolean",
          "example": false,
          "description": "If it is \"global\" tag"
        },
        "idTagPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "language": {
          "description": "Main language of a tag",
          "$ref": "#/definitions/UserLanguageBO"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "nmrUses": {
          "type": "integer",
          "format": "int64",
          "description": "Uses number"
        },
        "orgStructures": {
          "type": "array",
          "description": "Organizational structure list",
          "items": {
            "$ref": "#/definitions/OrganizationalStructureBO"
          }
        },
        "translations": {
          "type": "array",
          "description": "Translations of a tag",
          "items": {
            "$ref": "#/definitions/TagLanguageBO"
          }
        },
        "txtDescription": {
          "type": "string",
          "description": "Description"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        }
      }
    },
    "UserAlarmBO": {
      "type": "object",
      "description": "Alarms of an user",
      "properties": {
        "dateAdmission": {
          "type": "string",
          "format": "date_time",
          "description": "Admission date"
        },
        "dateFinished": {
          "type": "string",
          "format": "date_time",
          "description": "Final date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateMaturity": {
          "type": "string",
          "format": "date_time",
          "description": "Maturity date"
        },
        "dateReading": {
          "type": "string",
          "format": "date_time",
          "description": "Reading date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idUserAlarmPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtFree": {
          "type": "string",
          "description": "Free text"
        },
        "typeAlarm": {
          "description": "Alarm type",
          "$ref": "#/definitions/TypeAlarmBO"
        },
        "typeCriquiteAlarm": {
          "description": "Alarm critique type",
          "$ref": "#/definitions/TypeCriquiteAlarmBO"
        },
        "userAmapId": {
          "type": "integer",
          "format": "int64",
          "description": "User"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeStateIdeaBO": {
      "type": "object",
      "description": "STatus of an idea",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeStateIdeaPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "txtTypeStateIdea": {
          "type": "string",
          "description": "Idea state type text",
          "enum": [
            "ACTIVA",
            "RECHAZADA",
            "REALIZADA"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "JobProcessBO": {
      "type": "object",
      "description": "Proccess associated to a job",
      "properties": {
        "country": {
          "$ref": "#/definitions/CountryBO",
          "description": "Country associated with the relation of the job process"
        },
        "coverage": {
          "type": "string",
          "description": "Coverage of the process"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idRelationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the process"
        },
        "jobId": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the job"
        },
        "mainOs": {
          "type": "boolean",
          "description": "Mapfre main organizative process"
        },
        "observations": {
          "type": "string",
          "description": "Observations of the user"
        },
        "processCountry": {
          "$ref": "#/definitions/ProcessCountryBO",
          "description": "Country associated with the process"
        },
        "processUnitBusiness": {
          "$ref": "#/definitions/ProcessUnitBusinessBO",
          "description": "Mapfre unit business of the process"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        },
        "valuation": {
          "type": "string",
          "description": "Value of the process"
        }
      }
    },
    "TypeStateJobBO": {
      "type": "object",
      "description": "Types of job status",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateModify": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeStatePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "isActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "jobs": {
          "type": "array",
          "description": "Job list",
          "items": {
            "$ref": "#/definitions/JobBO"
          }
        },
        "stateJob": {
          "type": "string",
          "description": "Job status",
          "enum": [
            "EN_PLANIFICACION",
            "EN_CURSO",
            "INFORME_BORRADOR",
            "PLAN_DE_ACCION",
            "INFORME_DEFINITIVO",
            "SEGUIMIENTO DE RECOMENDACIONES",
            "CANCELADO",
            "TRABAJO_NO_REALIZADO"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userModify": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "SectorBO": {
      "type": "object",
      "description": "Mapfre sectors",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateVersion": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "idSectorPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActivo": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "nmrVersion": {
          "type": "number",
          "description": "Version number"
        },
        "txtNombre": {
          "type": "string",
          "description": "Name",
          "enum": [
            "AUTOS",
            "SEGUROS GENERALES",
            "SALUD Y ACCIDENTES",
            "OTROS",
            "VIDA",
            "SIN SECTOR",
            "TODOS"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        }
      }
    },
    "CelebratedSentenceBO": {
      "type": "object",
      "description": "Celebrated sentence to show to the user",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "datePublication": {
          "type": "string",
          "format": "date_time",
          "description": "Last publication date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idSentencePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtAutor": {
          "type": "string",
          "description": "Phrase author"
        },
        "txtSentence": {
          "type": "string",
          "description": "Phrase text"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "UserCategoryBO": {
      "type": "object",
      "description": "Category of an user",
      "properties": {
        "dateFinish": {
          "type": "string",
          "format": "date_time",
          "description": "Final date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateStart": {
          "type": "string",
          "format": "date_time",
          "description": "Initial date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idCategoryUserPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "organizationalStructure": {
          "description": "Organizational structure",
          "$ref": "#/definitions/OrganizationalStructureBO"
        },
        "typeCategoryProfessional": {
          "description": "Professional category type",
          "$ref": "#/definitions/TypeCategoryProfessionalBO"
        },
        "typeReasonChangeCategory": {
          "description": "Reason change category type",
          "$ref": "#/definitions/TypeReasonChangeCategoryBO"
        },
        "userAmap": {
          "description": "User",
          "$ref": "#/definitions/UserAmapBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeCertificationBO": {
      "type": "object",
      "description": "Certification types that can have an user",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeCertificationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "number",
          "description": "If it is active"
        },
        "txtTypeCertification": {
          "type": "string",
          "description": "Certification type",
          "enum": [
            "CIA",
            "CISM",
            "CISA",
            "PMP"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "JobDocumentBO": {
      "type": "object",
      "description": "Documents associated with a job",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "fileDocument": {
          "type": "array",
          "description": "Document file",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "idRelationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "job": {
          "description": "Job",
          "$ref": "#/definitions/JobBO"
        },
        "nmrSize": {
          "type": "number",
          "description": "Size number"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "typeDocument": {
          "type": "string",
          "description": "Document type",
          "enum": [
            "pdf",
            "doc",
            "docx",
            "xlx",
            "xlxs",
            "txt",
            "png",
            "jpg",
            "jpeg",
            "gif"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "MatrixRiskBO": {
      "type": "object",
      "description": "Risk matriz associated to an internal audit plan",
      "properties": {
        "country": {
          "description": "Country",
          "$ref": "#/definitions/CountryBO"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idMatrixRiskPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "matrixRiskValuations": {
          "type": "array",
          "description": "Risk valuations matrix list",
          "items": {
            "$ref": "#/definitions/MatrixRiskValuationBO"
          }
        },
        "nmrExerciese": {
          "type": "number",
          "description": "Exercise number"
        },
        "txtComment": {
          "type": "string",
          "description": "Comment text"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "txtStandardName": {
          "type": "string",
          "description": "Standard name"
        },
        "unitBusiness": {
          "description": "Business unit",
          "$ref": "#/definitions/UnitBusinessBO"
        },
        "userInsert": {
          "type": "string",
          "description": "Insertion user"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeSpecialityBO": {
      "type": "object",
      "description": "Types of specialities",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeSpecialityPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "txtTypeSpeciality": {
          "type": "string",
          "description": "Speciality type text",
          "enum": [
            "FINANCIACION",
            "GENERAL",
            "MARKETING",
            "ECONOMIA DE LA EMPRESA",
            "ACTUARIAL",
            "CONTABILIDAD Y AUDITORIA",
            "DIRECCION Y GESTION",
            "JURIDICO-EMPRESARIAL",
            "AUDITORIA",
            "FINANCIACION Y AUDITORIA",
            "FINANCIERA",
            "ESTRUCTURA ECONOMICA",
            "CIENCIAS DEL SEGURO",
            "INVESTIGACION COMERCIAL",
            "INVERSION Y FINANCIACION",
            "ECONOMIA PUBLICA Y TRIBUTARIA"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "ProcessUnitBusinessBO": {
      "type": "object",
      "description": "Process associated to a Mapfre unit business",
      "properties": {
        "cdProcess": {
          "type": "integer",
          "format": "int64",
          "description": "Process code"
        },
        "dateVersion": {
          "type": "string",
          "format": "date_time",
          "description": "Last version date"
        },
        "idProcessPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "nmrVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        },
        "processCountries": {
          "type": "array",
          "description": "Country process list",
          "items": {
            "$ref": "#/definitions/ProcessCountryBO"
          }
        },
        "processUnitBusiness": {
          "description": "Business unit process",
          "$ref": "#/definitions/ProcessUnitBusinessBO"
        },
        "processUnitBusinesses": {
          "type": "array",
          "description": "Business unit process list",
          "items": {
            "$ref": "#/definitions/ProcessUnitBusinessBO"
          }
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "typeProcess": {
          "description": "Process type",
          "$ref": "#/definitions/TypeProcessBO"
        },
        "unitBusiness": {
          "description": "Business unit",
          "$ref": "#/definitions/UnitBusinessBO"
        }
      }
    },
    "FactorRiskBO": {
      "type": "object",
      "description": "Risk factor of a risk matrix",
      "properties": {
        "cdFactor": {
          "type": "string",
          "description": "Risk factor"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "dateVersion": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "idFactorRiskPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "matrixRiskValuations": {
          "type": "array",
          "description": "Risk valuations matrix list",
          "items": {
            "$ref": "#/definitions/MatrixRiskValuationBO"
          }
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "nmrExerciese": {
          "type": "number",
          "description": "Exercise number"
        },
        "nmrSize": {
          "type": "number",
          "description": "Size number"
        },
        "nmrVersion": {
          "type": "number",
          "description": "Version number"
        },
        "txtName": {
          "type": "string",
          "description": "Risk factor name"
        },
        "txtValues": {
          "type": "string",
          "description": "Risk fator value"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "ParameterBO": {
      "type": "object",
      "description": "Configuration parameters of the application",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "idParameterPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "txtComment": {
          "type": "string",
          "description": "Comment text"
        },
        "txtValor": {
          "type": "string",
          "description": "Valor text"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        }
      }
    },
    "OriginBO": {
      "type": "object",
      "description": "Job origin",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idOriginPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "isActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "txtOrg": {
          "type": "string",
          "description": "Origin text"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "MatrixRiskValuationBO": {
      "type": "object",
      "description": "Evaluation of a risk matrix",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "factorRisk": {
          "description": "Risk factor",
          "$ref": "#/definitions/FactorRiskBO"
        },
        "idValuationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "matrixRisk": {
          "description": "Risk matrix",
          "$ref": "#/definitions/MatrixRiskBO"
        },
        "nmrSize": {
          "type": "number",
          "description": "Size number"
        },
        "nmrValuation": {
          "type": "number",
          "description": "Valuation number"
        },
        "processCountry": {
          "description": "Country process",
          "$ref": "#/definitions/ProcessCountryBO"
        },
        "txtComment": {
          "type": "string",
          "description": "Comment text"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeConceptImputationBO": {
      "type": "object",
      "description": "Types of imputation concepts",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "idTypeConceptImputationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "imputablePai": {
          "type": "boolean",
          "example": false,
          "description": "If it is an imputable pai"
        },
        "imputationsChildren": {
          "type": "array",
          "description": "Imputation children list",
          "items": {
            "type": "number"
          }
        },
        "txtTypeConceptImputation": {
          "type": "string",
          "description": "Concept imputation type text",
          "enum": [
            "AUSENCIAS JUSTIFICADAS",
            "VACACIONES",
            "FORMACIÓN",
            "COLABORACIÓN",
            "TRABAJOS",
            "OTRAS_COLABORACIONES",
            "SEGUIMIENTO DE RECOMENDACIONES",
            "FESTIVOS"
          ]
        },
        "typeConceptImputationFather": {
          "$ref": "#/definitions/TypeConceptImputationBO",
          "description": "Imputation father"
        }
      }
    },
    "TagLanguageBO": {
      "type": "object",
      "description": "Translation of a tag",
      "properties": {
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idLanguage": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the language"
        },
        "idRelationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the relation between tag and language"
        },
        "idTag": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the tag"
        },
        "txtValue": {
          "type": "string",
          "description": "Value of the translation"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "TaskDocumentBO": {
      "type": "object",
      "description": "Documents associated to a task",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "dateVersion": {
          "type": "string",
          "format": "date_time",
          "description": "Last version date"
        },
        "fileDocument": {
          "type": "array",
          "description": "File document",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "idRelationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "nmrSize": {
          "type": "number",
          "description": "Size number"
        },
        "nmrVersion": {
          "type": "number",
          "description": "Version number"
        },
        "task": {
          "description": "Task associated to the document",
          "$ref": "#/definitions/TaskBO"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "typeDocument": {
          "type": "string",
          "description": "Document type",
          "enum": [
            "pdf",
            "doc",
            "docx",
            "xlx",
            "xlxs",
            "txt",
            "png",
            "jpg",
            "jpeg",
            "gif"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeOriginProgramJobBO": {
      "type": "object",
      "description": "Types of program origins",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeOriginPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "programJobs": {
          "type": "array",
          "description": "Job program list",
          "items": {
            "$ref": "#/definitions/ProgramJobBO"
          }
        },
        "txtTypeOrigin": {
          "type": "string",
          "description": "Origin type",
          "enum": [
            "CREACION DESDE CERO",
            "IMPORTACION DEL PROGRAMA DE TRABAJO",
            "IMPORTACION DE GUÍA DE PROGRAMA DE TRABAJO"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "UserAmapBO": {
      "type": "object",
      "description": "Auditmap3 user",
      "properties": {
        "cdNuuma": {
          "type": "string",
          "description": "Nuuma code"
        },
        "dateAdmission": {
          "type": "string",
          "format": "date_time",
          "description": "Admission date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "department": {
          "description": "Department",
          "$ref": "#/definitions/DepartmentBO"
        },
        "entamap": {
          "description": "Entamap",
          "$ref": "#/definitions/EntamapBO"
        },
        "fileCvEn": {
          "type": "array",
          "description": "English resume file of the user",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "fileCvEs": {
          "type": "array",
          "description": "Spanish resume file of the user",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "fileFirm": {
          "type": "array",
          "description": "Image file of the user's firm",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "filePhoto": {
          "type": "array",
          "description": "Photo file of the user",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "idUserPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "language": {
          "description": "Language",
          "$ref": "#/definitions/LanguageBO"
        },
        "mobilityFunctional": {
          "type": "boolean",
          "example": false,
          "description": "If it is mobility functional"
        },
        "mobilityGeographic": {
          "type": "boolean",
          "example": false,
          "description": "If it is mobility geographic"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "nmrLaboralHours": {
          "type": "number",
          "description": "Number of laboral hours"
        },
        "nmrMobile": {
          "type": "integer",
          "format": "int64",
          "description": "Mobile number"
        },
        "organizationalStructure": {
          "description": "Organizational structure",
          "$ref": "#/definitions/OrganizationalStructureBO"
        },
        "professionalCategoryTypes": {
          "type": "array",
          "description": "User professional categories",
          "items": {
            "$ref": "#/definitions/TypeCategoryProfessionalBO"
          }
        },
        "roles": {
          "type": "array",
          "description": "Role type list",
          "items": {
            "$ref": "#/definitions/TypeRoleBO"
          }
        },
        "txtComment": {
          "type": "string",
          "description": "Comment text"
        },
        "txtExperience": {
          "type": "string",
          "description": "Experience text"
        },
        "txtLastname1": {
          "type": "string",
          "description": "First last name"
        },
        "txtLastname2": {
          "type": "string",
          "description": "Second last name"
        },
        "txtMail": {
          "type": "string",
          "description": "Mail"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "typeRole": {
          "description": "Role type",
          "$ref": "#/definitions/TypeRoleBO"
        },
        "typeTreatment": {
          "type": "string",
          "description": "Treatment type",
          "enum": [
            "Sr.",
            "Sra."
          ]
        },
        "userAlarms": {
          "type": "array",
          "description": "User alarms list",
          "items": {
            "$ref": "#/definitions/UserAlarmBO"
          }
        },
        "workLeaveDate": {
          "type": "string",
          "format": "date_time",
          "description": "Work leave date"
        }
      }
    },
    "AreaTerritorialBO": {
      "type": "object",
      "description": "Mapfre territorial areas",
      "properties": {
        "idAreaTerritoriaPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If the territorial area is active"
        },
        "txtAreaTerritorial": {
          "type": "string",
          "description": "Territorial area description",
          "enum": [
            "LATAM",
            "IBERIA",
            "INTERNACIONAL"
          ]
        }
      }
    },
    "TypeJobBO": {
      "type": "object",
      "description": "Job types",
      "properties": {
        "cdTypeJob": {
          "type": "string",
          "description": "Job type code",
          "enum": [
            "ORGANIZACIÓN TERRITORIAL",
            "FILIALES",
            "SERVICIOS CENTRALES",
            "INFORMÁTICA",
            "SUBCENTRAL",
            "OFICINA",
            "AGENTE",
            "ASEGURADORA",
            "NO ASEGURADORA",
            "FUNDACIÓN",
            "ADMINISTRACIÓN",
            "AREAS TECNICAS",
            "UNIDADES FUNCIONALES",
            "BORRADO _ CONTROLES GENERALES",
            "DESARROLLO Y MANTENIMIENTO APLICACIONES",
            "BORRADO _ CONTROLES MÍNIMOS",
            "TRABAJOS ESPECIALES",
            "ORGANIZACIÓN  Y GOBIERNO DE TI",
            "TRABAJOS ESPECIALES DE TI",
            "SISTEMAS Y PRODUCCIÓN",
            "SEGURIDAD",
            "REGULATORIO/CUMPLIMIENTO",
            "GESTION DE PROYECTOS",
            "TRABAJO FRAUDE",
            "CONSULTORIA",
            "APLICACIONES"
          ]
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeJobPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "isActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeLevelLanguageBO": {
      "type": "object",
      "description": "Types of language levels",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeLevelPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtTypeLevelLanguage": {
          "type": "string",
          "description": "Language level type text",
          "enum": [
            "A1",
            "A2",
            "B1",
            "B2",
            "C1",
            "C2"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userLanguages": {
          "type": "array",
          "description": "User languages list",
          "items": {
            "$ref": "#/definitions/UserLanguageBO"
          }
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "BudgetBO": {
      "type": "object",
      "description": "Bugdet associated to an internal audit plan",
      "properties": {
        "currency": {
          "description": "Currency",
          "$ref": "#/definitions/CurrencyBO"
        },
        "dateFinish": {
          "type": "string",
          "format": "date_time",
          "description": "End date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateStart": {
          "type": "string",
          "format": "date_time",
          "description": "Initial date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "dateValitacion": {
          "type": "string",
          "format": "date_time",
          "description": "Validation date"
        },
        "idBudgetPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "nmrExerciese": {
          "type": "number",
          "description": "Exercise number"
        },
        "organizationalStructure": {
          "description": "Organizational structure",
          "$ref": "#/definitions/OrganizationalStructureBO"
        },
        "pais": {
          "type": "array",
          "description": "Pais",
          "items": {
            "$ref": "#/definitions/PaiBO"
          }
        },
        "txtComments": {
          "type": "string",
          "description": "Text comment"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "txtoNameStandard": {
          "type": "string",
          "description": "Standard Name"
        },
        "typeStatusBudget": {
          "description": "Type status budget",
          "$ref": "#/definitions/TypeStatusBudgetBO"
        },
        "userAmap1": {
          "description": "User creator",
          "$ref": "#/definitions/UserAmapBO"
        },
        "userAmap2": {
          "description": "Approved user",
          "$ref": "#/definitions/UserAmapBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "NewBO": {
      "type": "object",
      "description": "News to show to the user",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "datePublication": {
          "type": "string",
          "format": "date_time",
          "description": "Publication date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "fileDocument": {
          "type": "string",
          "description": "Document file"
        },
        "idNewsPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "principal": {
          "type": "boolean",
          "example": false,
          "description": "Principal"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "txtNews": {
          "type": "string",
          "description": "News"
        },
        "txtUrl": {
          "type": "string",
          "description": "Url"
        },
        "typeDocument": {
          "type": "string",
          "description": "Document type",
          "enum": [
            "pdf",
            "doc",
            "docx",
            "xlx",
            "xlxs",
            "txt",
            "png",
            "jpg",
            "jpeg",
            "gif"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "JobTagBO": {
      "type": "object",
      "description": "Tag of a job",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idRelationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "job": {
          "description": "Job",
          "$ref": "#/definitions/JobBO"
        },
        "tag": {
          "description": "Tag",
          "$ref": "#/definitions/TagBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeTraceBO": {
      "type": "object",
      "description": "Types of application traces",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeTracePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "jobLogs": {
          "type": "array",
          "description": "Job log list",
          "items": {
            "$ref": "#/definitions/JobLogBO"
          }
        },
        "txtTypeTrace": {
          "type": "string",
          "description": "Trace type text",
          "enum": [
            "AVANCE_FASE"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeRoleBO": {
      "type": "object",
      "description": "Types or application roles",
      "properties": {
        "idTypeRolePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtTypeRole": {
          "type": "string",
          "description": "Role type",
          "enum": [
            "ROL_ADMINISTRADOR",
            "ROL_DIRECTOR",
            "ROL_JEFE_DE_AREA",
            "ROL_AUDITOR",
            "ROL_AUDITADO",
            "ROL_VALIDADOR",
            "ROL_ASISTENTE",
            "ROL_ADMINISTRACION_GLOBAL",
            "ROL_ADMINISTRACION_DIVISAS",
            "ROL_ADMINISTRACION_ESTRUCTURAS",
            "ROL_ADMINISTRACION_RHUMANOS",
            "ROL_ADMINISTRACION_USUARIOS",
            "ROL_ADMINISTRACION_AEXTERNAS",
            "ROL_ADMINISTRACION_CUESTIONARIOS",
            "ROL_ADMINISTRACION_NOTICIAS",
            "ROL_ADMINISTRACION_PROCESOS",
            "ROL_ADMINISTRACION_PROGRAMA_TRABAJOS",
            "ROL_ADMINISTRACION_MANTENIMIENTO"
          ]
        }
      }
    },
    "TypePredictionChangeBO": {
      "type": "object",
      "description": "Types of currency change predictions",
      "properties": {
        "currency": {
          "description": "Currency",
          "$ref": "#/definitions/CurrencyBO"
        },
        "idTypePredictionChangePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "nmrChange": {
          "type": "number",
          "description": "Change number"
        },
        "nmrExerciese": {
          "type": "number",
          "description": "Exercise year"
        },
        "nmrExercieseApply": {
          "type": "number",
          "description": "Exercise application year"
        },
        "txtoTypePrediction": {
          "type": "string",
          "description": "Prediction type"
        }
      }
    },
    "GuideJobBO": {
      "type": "object",
      "description": "Job guides",
      "properties": {
        "cdNode": {
          "type": "integer",
          "format": "int64",
          "description": "Node code"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUse": {
          "type": "string",
          "format": "date_time",
          "description": "Last use date"
        },
        "dateVersion": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "guideJob": {
          "description": "Job guide",
          "$ref": "#/definitions/GuideJobBO"
        },
        "guideJobs": {
          "type": "array",
          "description": "Job guide List",
          "items": {
            "$ref": "#/definitions/GuideJobBO"
          }
        },
        "idNodePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "nmVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        },
        "nmrUses": {
          "type": "integer",
          "format": "int64",
          "description": "Number of uses"
        },
        "tasks": {
          "type": "array",
          "description": "Task list associated to guide job",
          "items": {
            "$ref": "#/definitions/TaskBO"
          }
        },
        "txtNameGuide": {
          "type": "string",
          "description": "Job guide name"
        },
        "txtNode": {
          "type": "string",
          "description": "Node text"
        },
        "typeNode": {
          "description": "Node type",
          "$ref": "#/definitions/TypeNodeBO"
        }
      }
    },
    "QuestionnaireQuestionBO": {
      "type": "object",
      "description": "Question of a questionnaire",
      "properties": {
        "dateVersion": {
          "type": "string",
          "description": "Version date"
        },
        "idQuestionnaireQuestionPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "nmrOrder": {
          "type": "integer",
          "format": "int64",
          "description": "Order number"
        },
        "nmrVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        },
        "questionId": {
          "type": "integer",
          "format": "int64",
          "description": "Question identifier"
        },
        "questionnaireId": {
          "type": "integer",
          "format": "int64",
          "description": "Questionnaire identifier"
        }
      }
    },
    "ProgramJobBO": {
      "type": "object",
      "description": "Job program associated to a job",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateLastUse": {
          "type": "string",
          "format": "date_time",
          "description": "Last use date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idNodePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "isImportant": {
          "type": "boolean",
          "example": false,
          "description": "If it is important"
        },
        "job": {
          "description": "Job",
          "$ref": "#/definitions/JobBO"
        },
        "jobs": {
          "type": "array",
          "description": "Job list",
          "items": {
            "$ref": "#/definitions/JobBO"
          }
        },
        "programJob": {
          "description": "Job program",
          "$ref": "#/definitions/ProgramJobBO"
        },
        "programJobs": {
          "type": "array",
          "description": "Job program list",
          "items": {
            "$ref": "#/definitions/ProgramJobBO"
          }
        },
        "txtNode": {
          "type": "string",
          "description": "Node"
        },
        "typeNode": {
          "description": "Node type",
          "$ref": "#/definitions/TypeNodeBO"
        },
        "typeOriginProgramJob": {
          "description": "Program job origin list",
          "$ref": "#/definitions/TypeOriginProgramJobBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeChangeBO": {
      "type": "object",
      "description": "Types oc currency changes",
      "properties": {
        "currency": {
          "description": "Currency",
          "$ref": "#/definitions/CurrencyBO"
        },
        "dateChange": {
          "type": "string",
          "format": "date_time",
          "description": "Change date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "idTypeChangePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "nrmChange": {
          "type": "number",
          "description": "Change number"
        }
      }
    },
    "EntamapBO": {
      "type": "object",
      "description": "Mapfre entitites",
      "properties": {
        "country": {
          "description": "Country",
          "$ref": "#/definitions/CountryBO"
        },
        "currency": {
          "description": "Currency",
          "$ref": "#/definitions/CurrencyBO"
        },
        "entamap": {
          "description": "Entamap",
          "$ref": "#/definitions/EntamapBO"
        },
        "entamaps": {
          "type": "array",
          "description": "Entamap list",
          "items": {
            "$ref": "#/definitions/EntamapBO"
          }
        },
        "idEntityPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If the Entamap is active"
        },
        "txtDescription": {
          "type": "string",
          "description": "Description"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "typeOrganizationalStructure": {
          "description": "Organizational Structure type",
          "$ref": "#/definitions/TypeOrganizationalStructureBO"
        },
        "userAmaps": {
          "type": "array",
          "description": "User list",
          "items": {
            "$ref": "#/definitions/UserAmapBO"
          }
        }
      }
    },
    "UserLanguageBO": {
      "type": "object",
      "description": "LAngauge of an user",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idUserLanguagePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "language": {
          "description": "Language",
          "$ref": "#/definitions/LanguageBO"
        },
        "txtComment": {
          "type": "string",
          "description": "Comment text"
        },
        "typeLevelLanguage": {
          "description": "Language level type",
          "$ref": "#/definitions/TypeLevelLanguageBO"
        },
        "userAmap": {
          "description": "User",
          "$ref": "#/definitions/UserAmapBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeCourseBO": {
      "type": "object",
      "description": "Courses types of an user",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeCoursePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "txtTypeCourse": {
          "type": "string",
          "description": "Course type text",
          "enum": [
            "APLICACIONES_INFORMATICAS",
            "CONTROL_INTERNO_Y_RIESGOS",
            "CURSOS_GLOBALES_MAPFRE",
            "CERTIFICACIONES_DE_AUDITORIA",
            "CONTABILIDAD_SEGUROS_FINANZAS",
            "LEGISLACION",
            "AUTOFORMACION",
            "FORMACION_DE_NEGOCIO",
            "SEMINARIO_AUDITORES_INTERNOS_MAPFRE",
            "SOLVENCIA_II",
            "TI_AUDITS_PROGRAMMING",
            "LUCHA_FRAUDE_BLANQUEO_CAPITALES",
            "IDIOMAS",
            "FORMACION_EN_AUDITORIA"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "JobIdeaBO": {
      "type": "object",
      "description": "Idea associated to a job",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idRelationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "idea": {
          "description": "Sequence identifier Primary key",
          "$ref": "#/definitions/IdeaBO"
        },
        "job": {
          "description": "Sequence identifier Primary key",
          "$ref": "#/definitions/JobBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "PaiBO": {
      "type": "object",
      "description": "Internal audit plan",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntamapBO"
          },
          "description": "Mapfre entities of the internal audit plan"
        },
        "financialYear": {
          "type": "integer",
          "format": "int64",
          "description": "Financial year of the internal audit plan"
        },
        "idPai": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the internal audit plan"
        },
        "job": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobBO"
          },
          "description": "Jobs associated with the internal audit plan"
        },
        "name": {
          "type": "string",
          "description": "Name of the internal audit plan"
        },
        "nameStandard": {
          "type": "string",
          "description": "Standard name of the internal audit plan"
        },
        "organizationalStructure": {
          "$ref": "#/definitions/OrganizationalStructureBO",
          "description": "Mapfre organizational structures of the internal audit plan"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "TaskBO": {
      "type": "object",
      "description": "Task associates to a job",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "guideJob": {
          "description": "Job guide",
          "$ref": "#/definitions/GuideJobBO"
        },
        "idTaskPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "taskDocuments": {
          "type": "array",
          "description": "Task documents list",
          "items": {
            "$ref": "#/definitions/TaskDocumentBO"
          }
        },
        "txtoDescription": {
          "type": "string",
          "description": "Description"
        },
        "txtoJob": {
          "type": "string",
          "description": "Job"
        },
        "userAmap1": {
          "description": "Auditor user",
          "$ref": "#/definitions/UserAmapBO"
        },
        "userAmap2": {
          "description": "Responsible user",
          "$ref": "#/definitions/UserAmapBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        },
        "additionalProposal": {
          "type": "array",
          "description": "Additional Proposal list",
          "items": {
            "$ref": "#/definitions/AdditionalProposalBO"
          }
        }
      }
    },
    "CountryBO": {
      "type": "object",
      "description": "Countries used in the application",
      "properties": {
        "cdIso": {
          "type": "string",
          "description": "Currency ISO",
          "enum": [
            "ES",
            "ID",
            "AO",
            "PT",
            "BE",
            "GB",
            "US",
            "MX",
            "VE",
            "CO",
            "BR",
            "AR",
            "CL",
            "PE",
            "IE",
            "GR",
            "DE",
            "HU",
            "RU",
            "FR",
            "SV",
            "GT",
            "CR",
            "PA",
            "NI",
            "HN",
            "EC",
            "BO",
            "UY",
            "PY",
            "DO",
            "TR",
            "BH",
            "CA",
            "PR",
            "TN",
            "PH",
            "NZ",
            "IT",
            "LU",
            "CN",
            "JO",
            "IN",
            "MT",
            "SE",
            "AU",
            "HK",
            "JP",
            "TW",
            "AN",
            "AW",
            "BM",
            "KR",
            "GY",
            "JM",
            "SG",
            "LK",
            "TH",
            "TT",
            "VN",
            "MY",
            "PK",
            "LY",
            "DZ",
            "EG"
          ]
        },
        "currency": {
          "description": "Currency",
          "$ref": "#/definitions/CurrencyBO"
        },
        "idCountryPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "region": {
          "description": "Region which the country belongs",
          "$ref": "#/definitions/RegionBO"
        },
        "txtName": {
          "type": "string",
          "description": "Currency name",
          "enum": [
            "ESPAÑA",
            "INDONESIA",
            "ANGOLA",
            "PORTUGAL",
            "BELGICA",
            "GRAN BRETAÑA",
            "ESTADOS UNIDOS",
            "MEXICO",
            "VENEZUELA",
            "COLOMBIA",
            "BRASIL",
            "ARGENTINA",
            "CHILE",
            "PERU",
            "IRLANDA",
            "GRECIA",
            "ALEMANIA",
            "HUNGRIA",
            "RUSIA",
            "FRANCIA",
            "EL SALVADOR",
            "GUATEMALA",
            "COSTA RICA",
            "PANAMA",
            "NICARAGUA",
            "HONDURAS",
            "ECUADOR",
            "BOLIVIA",
            "URUGUAY",
            "PARAGUAY",
            "REPUBLICA DOMINICANA",
            "TURQUIA",
            "BAHREIN",
            "CANADA",
            "PUERTO RICO",
            "TUNEZ",
            "FILIPINAS",
            "NUEVA ZELANDA",
            "ITALIA",
            "LUXEMBURGO",
            "CHINA",
            "JORDANIA",
            "INDIA",
            "MALTA",
            "SUECIA",
            "AUSTRALIA",
            "HONG KONG",
            "JAPON",
            "TAIWAN",
            "ANTILLAS HOLANDESAS",
            "ARUBA",
            "BERMUDAS",
            "COREA DEL SUR",
            "GUYANA",
            "JAMAICA",
            "SINGAPUR",
            "SRI LANKA",
            "THAILANDIA",
            "TRINIDAD Y TOBAGO",
            "VIETNAM",
            "MALASIA",
            "PAKISTAN",
            "LIBIA",
            "ARGELIA"
          ]
        }
      }
    },
    "RegionBO": {
      "type": "object",
      "description": "Zonez used in the application",
      "properties": {
        "areaTerritorial": {
          "description": "Territorial area",
          "$ref": "#/definitions/AreaTerritorialBO"
        },
        "idRegionPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "txtRegion": {
          "type": "string",
          "description": "Region text",
          "enum": [
            "IBERIA",
            "LATAM NORTE",
            "LATAM SUR",
            "EUROASIA",
            "NORTEAMERICA"
          ]
        }
      }
    },
    "ProcessCountryBO": {
      "type": "object",
      "description": "Process associated to a Mapfre unit business and a country",
      "properties": {
        "cdProcess": {
          "type": "integer",
          "format": "int64",
          "description": "Code process country"
        },
        "country": {
          "description": "Country",
          "$ref": "#/definitions/CountryBO"
        },
        "dateVersion": {
          "type": "string",
          "format": "date_time",
          "description": "Last version date"
        },
        "idProcessPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "nmrSize": {
          "type": "integer",
          "format": "int64",
          "description": "Size number"
        },
        "nmrVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        },
        "processUnitBusiness": {
          "description": "Business unit process",
          "$ref": "#/definitions/ProcessUnitBusinessBO"
        },
        "sector": {
          "description": "Sector",
          "$ref": "#/definitions/SectorBO"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "typeProcess": {
          "description": "Process type",
          "$ref": "#/definitions/TypeProcessBO"
        },
        "unitBusiness": {
          "description": "Business unit",
          "$ref": "#/definitions/UnitBusinessBO"
        }
      }
    },
    "TypeReasonChangeCategoryBO": {
      "type": "object",
      "description": "Tpyes of changes for a user category",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeOtherReasonPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtDescription": {
          "type": "string",
          "description": "Description",
          "enum": [
            "CAMBIO_DEPARTAMENTO",
            "PROMOCION",
            "SE_VA_DE_MAPFRE",
            "SE_VA_DE_AUDITORIA",
            "BAJA_TEMPORAL",
            "OTRO"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "CurrencyBO": {
      "type": "object",
      "description": "Currencies used in the application",
      "properties": {
        "codCurrency": {
          "type": "string",
          "description": "Currency code"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "idCurrencyPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If the currency is active"
        },
        "txtCurrency": {
          "type": "string",
          "description": "Currency name"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        }
      }
    },
    "ClosePeriodBO": {
      "type": "object",
      "description": "Closing period",
      "properties": {
        "dateFinish": {
          "type": "string",
          "format": "date_time",
          "description": "Final date period"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateStart": {
          "type": "string",
          "format": "date_time",
          "description": "Initial date period"
        },
        "exercise": {
          "type": "integer",
          "format": "int64",
          "description": "Exercise"
        },
        "idClosePeriodPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If close period is active"
        },
        "typeClosePeriod": {
          "description": "Close period type",
          "$ref": "#/definitions/TypeClosePeriodBO"
        }
      }
    },
    "TypeClosePeriodBO": {
      "type": "object",
      "description": "Types of closing period",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeClosePeriodPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtTypeClosePeriod": {
          "type": "string",
          "description": "Close period type",
          "enum": [
            "CIERRE_PRINCIPAL",
            "PLANES_DE_AUDITORIA",
            "TIEMPOS",
            "GASTOS",
            "PREVISIONES_DE_PLANTILLA"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeCategoryProfessionalBO": {
      "type": "object",
      "description": "Types of professional categories",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeCategoryPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "isBoss": {
          "type": "boolean",
          "description": "If it is a boss"
        },
        "nmrLevel": {
          "type": "string",
          "description": "Level number"
        },
        "nmrOrder": {
          "type": "string",
          "description": "Order number"
        },
        "txtTypeCategory": {
          "type": "string",
          "description": "Category type",
          "enum": [
            "SUBDIRECTOR DE UAI",
            "AUDITOR C1",
            "AUDITOR B1",
            "AUDITOR A1",
            "DIRECTOR GENERAL AUDITORIA",
            "ADJUNTO A LA DIRECCIÓN GENERAL",
            "DIRECTOR DE SAI",
            "DIRECTOR DE UAI",
            "JEFE DE AREA",
            "AUDITOR A2",
            "AUDITOR B2",
            "AUDITOR C2",
            "PERSONAL ADMINISTRATIVO",
            "SUBDIRECTOR DE SAI",
            "SUBDIRECTOR GENERAL AUDITORÍA"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "UnitBusinessBO": {
      "type": "object",
      "description": "Mapfre business units",
      "properties": {
        "idUnitBusinessPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "string",
          "description": "If it is active"
        },
        "txtoUnitBusiness": {
          "type": "string",
          "description": "Business unit text"
        }
      }
    },
    "IdeaBO": {
      "type": "object",
      "description": "Idea associated to a job",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idIdeaPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "idMrkStateFk": {
          "type": "number",
          "description": "State mark"
        },
        "ideaDocuments": {
          "type": "array",
          "description": "Idea document list",
          "items": {
            "$ref": "#/definitions/IdeaDocumentBO"
          }
        },
        "jobIdeas": {
          "type": "array",
          "description": "Job idea list",
          "items": {
            "$ref": "#/definitions/JobIdeaBO"
          }
        },
        "organizationalStructure": {
          "description": "Organizational structure associated to an idea",
          "$ref": "#/definitions/OrganizationalStructureBO"
        },
        "txtDescription": {
          "type": "string",
          "description": "Description"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeNodeBO": {
      "type": "object",
      "description": "Types of nodes",
      "properties": {
        "idTypeNodePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtNode": {
          "type": "string",
          "description": "Node text",
          "enum": [
            "NODO RAIZ",
            "AREA",
            "SUBAREA",
            "TAREA"
          ]
        }
      }
    },
    "CountryRegionBO": {
      "type": "object",
      "description": "Country region",
      "properties": {
        "currency": {
          "description": "Currency",
          "$ref": "#/definitions/CurrencyBO"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "region": {
          "description": "Region",
          "$ref": "#/definitions/RegionBO"
        },
        "country": {
          "description": "Country",
          "$ref": "#/definitions/CountryBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "QuestionBO": {
      "type": "object",
      "description": "Questions",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idQuestionTypePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "nmrOrder": {
          "type": "integer",
          "format": "int64",
          "description": "Order number"
        },
        "optionQuestion": {
          "type": "boolean",
          "example": false,
          "description": "If it is an option question"
        },
        "textQuestion": {
          "type": "boolean",
          "example": false,
          "description": "If it is a text question"
        },
        "txtQuestion": {
          "type": "string",
          "description": "Question text"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "DepartmentBO": {
      "type": "object",
      "description": "Mapfre departaments",
      "properties": {
        "idDepartmentPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If the department is active"
        },
        "txtDepartment": {
          "type": "string",
          "description": "Department name"
        }
      }
    },
    "JobBO": {
      "type": "object",
      "description": "Job associated to an internal audit plan",
      "properties": {
        "closingReason": {
          "description": "Closing reason",
          "$ref": "#/definitions/TypeReasonCloseBO"
        },
        "dateExpectFinish": {
          "type": "string",
          "format": "date_time",
          "description": "Expected finish date"
        },
        "dateExpectStart": {
          "type": "string",
          "format": "date_time",
          "description": "Expected start date"
        },
        "dateFinish": {
          "type": "string",
          "format": "date_time",
          "description": "Final date"
        },
        "dateInitial": {
          "type": "string",
          "format": "date_time",
          "description": "Initial date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "entities": {
          "type": "array",
          "description": "Entities",
          "items": {
            "$ref": "#/definitions/EntamapBO"
          }
        },
        "hours": {
          "type": "integer",
          "format": "int64",
          "description": "Hours"
        },
        "idJobPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "jobDocuments": {
          "type": "array",
          "description": "Job document list",
          "items": {
            "$ref": "#/definitions/JobDocumentBO"
          }
        },
        "jobExpected": {
          "type": "integer",
          "format": "int64",
          "description": "Job expected"
        },
        "jobIdeas": {
          "type": "array",
          "description": "Job idea list",
          "items": {
            "$ref": "#/definitions/JobIdeaBO"
          }
        },
        "jobLogs": {
          "type": "array",
          "description": "Job log list",
          "items": {
            "$ref": "#/definitions/JobLogBO"
          }
        },
        "jobName": {
          "type": "string",
          "description": "Job name"
        },
        "jobOrigins": {
          "type": "array",
          "description": "Job origin list",
          "items": {
            "$ref": "#/definitions/OriginBO"
          }
        },
        "jobProcess": {
          "type": "array",
          "description": "Job process",
          "items": {
            "$ref": "#/definitions/JobProcessBO"
          }
        },
        "jobProgram": {
          "type": "array",
          "description": "Job program",
          "items": {
            "$ref": "#/definitions/ProgramJobBO"
          }
        },
        "jobScope": {
          "type": "string",
          "description": "Job scope"
        },
        "jobSeventy": {
          "description": "Job seventy",
          "$ref": "#/definitions/JobBO"
        },
        "jobStandardName": {
          "type": "string",
          "description": "Job standard name"
        },
        "jobState": {
          "description": "Job state",
          "$ref": "#/definitions/TypeStateJobBO"
        },
        "jobTags": {
          "type": "array",
          "description": "Job tag list",
          "items": {
            "$ref": "#/definitions/JobTagBO"
          }
        },
        "jobType": {
          "description": "Job type",
          "$ref": "#/definitions/TypeJobBO"
        },
        "jobs": {
          "type": "array",
          "description": "Job list",
          "items": {
            "$ref": "#/definitions/JobBO"
          }
        },
        "organizationalStructure": {
          "type": "array",
          "description": "Organizational structures",
          "items": {
            "$ref": "#/definitions/OrganizationalStructureBO"
          }
        },
        "organizationalStructureName": {
          "type": "string",
          "description": "Organizational Structure Name"
        },
        "pai": {
          "description": "Pai",
          "$ref": "#/definitions/PaiBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        },
        "weights": {
          "type": "array",
          "description": "Weights",
          "items": {
            "$ref": "#/definitions/WeightBO"
          }
        }
      }
    },
    "TypeProcessBO": {
      "type": "object",
      "description": "Types of process",
      "properties": {
        "cdTypeProcess": {
          "type": "string",
          "description": "Type process code",
          "enum": [
            "PROCESO",
            "SUB_PROCESO",
            "SUB_PROCESO_LOCAL"
          ]
        },
        "idTypeProcessPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtDescription": {
          "type": "string",
          "description": "Description"
        }
      }
    },
    "OrganizationalStructureBO": {
      "type": "object",
      "description": "Mapfre organizational structures",
      "properties": {
        "cdOrganizationalStructure": {
          "type": "string",
          "description": "Organizational structure code"
        },
        "country": {
          "description": "Country",
          "$ref": "#/definitions/CountryBO"
        },
        "currency": {
          "description": "Currency",
          "$ref": "#/definitions/CurrencyBO"
        },
        "hours": {
          "type": "integer",
          "format": "int64",
          "description": "hours"
        },
        "idOrganizationalStructurePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "nmrDaysLab": {
          "type": "number",
          "description": "Lab days number"
        },
        "nmrHoursLab": {
          "type": "number",
          "description": "Lab hours number"
        },
        "organizationalStructure": {
          "description": "Organizational structure father",
          "$ref": "#/definitions/OrganizationalStructureBO"
        },
        "txtAbbreviation": {
          "type": "string",
          "description": "Abbreviation"
        },
        "txtDescription": {
          "type": "string",
          "description": "Description"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "typeOrganizationalStructure": {
          "description": "Organizational structure type",
          "$ref": "#/definitions/TypeOrganizationalStructureBO"
        }
      }
    },
    "TypeAlarmBO": {
      "type": "object",
      "description": "Types of alarms",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification user"
        },
        "fileLogo": {
          "type": "string",
          "description": "Logo file"
        },
        "idTypeAlarmPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "isComunicationMail": {
          "type": "number",
          "description": "If it is a communication mail"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "txtTypeAlarm": {
          "type": "string",
          "description": "Alarm type",
          "enum": [
            "GRADO_AVANCE_TRABAJOS",
            "EVALUACIONES_TRABAJO",
            "TAREA_REABIERTA",
            "PROPONER_PLAN_ACCION",
            "TRABAJO_ASIGNADO_A_PAI_DIRECTOR_EXTERNO",
            "TRABAJOS_EXPIRADOS_SIN_EMITIR_BORRADOR",
            "TRABAJO_CAMPO_NO_CUMPLE_EXPECTATIVAS",
            "EMISION_INFORME_BORRADOR",
            "INFORMES_REVISADOS",
            "PLAZOS_EN_INFORMES",
            "CUESTIONARIOS",
            "CUESTIONARIOS_DISPONIBLES",
            "INFORME_DISPONIBLE_PARA_COMENTAR",
            "COMENTARIOS_AUDITADO_EN_BORRADOR",
            "COMENTARIOS_AUDITADO_EN_PLAN_ACCION",
            "INFORME_DEFINITIVO_EMITIDO",
            "CONTESTAR_INFORME_BORRADOR",
            "COMENTARIOS_AUDITADO_EN_RECOMENDACIONES",
            "VENCIMIENTO_PROXIMO_RECOMENDACIONES",
            "RECOMENDACIONES_SIN_ACTU_DURANTE_PERIODO",
            "CAMBIO_EN_RECOMENDACION",
            "HECHO_OBSERVADO",
            "RECOMENDACION_ASIGNADA",
            "CIERRE_DE_RECOMENDACIONES",
            "FICHAJES_PENDIENTES",
            "ALARMAS_BASADAS_EN_ETIQUETAS",
            "ALARMAS_MANUALES",
            "NUEVO_PLAN_ACCION_ASSIGNADO",
            "SUPLANTACION_USUARIO",
            "MATRIZ_ASOCIADA_INEXISTENTE",
            "VALORACION_PROCESOS",
            "IMPUTACION_HORAS",
            "PRESUPUESTO_LISTO_PARA_REVISION",
            "PRESUPUESTO_CERRADO",
            "POCO_TIEMPO_PARA_REALIZAR_PRESUPUESTO",
            "INCLUIR_SEGUIMIENTO_ANTES_VENC_PERIODO",
            "INCLUIR_INFO_ACUERDO_COMITE_AUDITORIA",
            "TRABAJO_ASIGNADO_OTRA_EO",
            "TRABAJO_ASIGNADO_OTRA_EO_RECHAZADO",
            "TRABAJO_ASIGNADO_OTRA_EO_ELIMINADO"
          ]
        },
        "typeCategoryAlarm": {
          "description": "Alarm category type",
          "$ref": "#/definitions/TypeCategoryAlarmBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeCategoryAlarmBO": {
      "type": "object",
      "description": "Types of alarm categories",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeCategoryAlarmPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtTypeCategoryAlarm": {
          "type": "string",
          "description": "Alarm category type",
          "enum": [
            "TRABAJOS",
            "INFORMES",
            "RECOMENDACIONES",
            "OTROS",
            "PLAN_DE_ACCION",
            "PAI",
            "AVISO_PANTALLA",
            "PRESUPUESTOS",
            "COMITE_DE_AUDITORIA"
          ]
        },
        "typeAlarms": {
          "type": "array",
          "description": "Alarm type list",
          "items": {
            "$ref": "#/definitions/TypeAlarmBO"
          }
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeCriquiteAlarmBO": {
      "type": "object",
      "description": "Criticy of an alarm",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeCritiqueAlarmPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If it is active"
        },
        "txtTypeCritiqueAlarm": {
          "type": "string",
          "description": "Alarm critique type text",
          "enum": [
            "IMPORTANTE",
            "NO_IMPORTANTE"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "IdeaDocumentBO": {
      "type": "object",
      "description": "Document associated to an idea",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "fileDocument": {
          "type": "array",
          "description": "Document file",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "idRelationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "idea": {
          "description": "Idea",
          "$ref": "#/definitions/IdeaBO"
        },
        "nmrSize": {
          "type": "number",
          "description": "Size number"
        },
        "txtDocument": {
          "type": "string",
          "description": "Document text"
        },
        "typeDocument": {
          "type": "string",
          "description": "Document type",
          "enum": [
            "pdf",
            "doc",
            "docx",
            "xlx",
            "xlxs",
            "txt",
            "png",
            "jpg",
            "jpeg",
            "gif"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "QuestionnaireBO": {
      "type": "object",
      "description": "Auditmap3 questionnaries",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateVersion": {
          "type": "string",
          "format": "date_time",
          "description": "Last version date"
        },
        "idQuestionnairePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "nmrVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Version Number"
        },
        "questionList": {
          "type": "array",
          "description": "Question list associated to a questionnaire",
          "items": {
            "$ref": "#/definitions/QuestionBO"
          }
        },
        "txtDescription": {
          "type": "string",
          "description": "Description"
        },
        "txtTitle": {
          "type": "string",
          "description": "Title"
        }
      }
    },
    "JobLogBO": {
      "type": "object",
      "description": "Log of status changes on a job",
      "properties": {
        "dateEvent": {
          "type": "string",
          "format": "date_time",
          "description": "Event date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idEventPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "job": {
          "description": "Job",
          "$ref": "#/definitions/JobBO"
        },
        "txtEvent": {
          "type": "string",
          "description": "Event text"
        },
        "typeTrace": {
          "description": "Trace type",
          "$ref": "#/definitions/TypeTraceBO"
        },
        "userEvent": {
          "type": "string",
          "description": "User event"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "FactObserverBO": {
      "type": "object",
      "description": "Fact observer of a task",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateRegistered": {
          "type": "string",
          "format": "date_time",
          "description": "Register date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "description": {
          "type": "string",
          "description": "Description of the fact observer"
        },
        "idFactObserverPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "name": {
          "type": "string",
          "description": "Name of the fact observer"
        },
        "programJobId": {
          "type": "integer",
          "format": "int64",
          "description": "Program job id"
        },
        "recommendation": {
          "type": "array",
          "description": "Recommendation associated to the fact observer",
          "items": {
            "$ref": "#/definitions/RecommendationBO"
          }
        },
        "userInsert": {
          "type": "string",
          "description": "User insert"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Version number of the fact observer"
        }
      }
    },
    "RecommendationBO": {
      "type": "object",
      "description": "Recommendation of a fact observer",
      "properties": {
        "associatedRecommendation": {
          "type": "integer",
          "format": "int64",
          "description": "Associated recommendation of this recommendation"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendationCommentBO"
          },
          "description": "Comments of the recommendation"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "department": {
          "$ref": "#/definitions/DepartmentBO",
          "description": "Mapfre department associated with the recommendation"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendationEntityBO"
          },
          "description": "Mapfre entity associated with the recommendation"
        },
        "actionPlan": {
          "$ref": "#/definitions/RecommendationActionPlanBO",
          "description": "Action plan of a recommendation"
        },
        "factObserver": {
          "type": "integer",
          "format": "int64",
          "description": "Fact observer of the recommendation"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Code to identify the recommendation"
        },
        "idtSqn": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "name": {
          "type": "string",
          "description": "Recommendation name"
        },
        "processes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobProcessBO"
          },
          "description": "Processes associated to the recommendation"
        },
        "responsible": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendationLibBO"
          },
          "description": "Users responsibles"
        },
        "risks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendationRiskBO"
          },
          "description": "Risks associated to the recommendation"
        },
        "status": {
          "$ref": "#/definitions/TypeStatusRecommendationBO",
          "description": "Recommendation status"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendationTagBO"
          },
          "description": "Tags of the recommendation"
        },
        "text": {
          "type": "string",
          "description": "Text of the recommendation"
        },
        "typeCritique": {
          "$ref": "#/definitions/TypeCritiqueFactBO",
          "description": "Type of critique"
        },
        "userInsert": {
          "type": "string",
          "description": "Inser user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        }
      }
    },
    "RecommendationActionPlanBO": {
      "type": "object",
      "description": "Action plan of a recommendation",
      "properties": {
        "userResponsible": {
          "$ref": "#/definitions/UserAmapBO",
          "description": "User responsible"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "executionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Date of execution of the action plan"
        },
        "expirationDate": {
          "type": "string",
          "format": "date_time",
          "description": "Date of expiration of the action plan"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Code to identify the associated recommendation"
        },
        "idtSqn": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "progressDegree": {
          "type": "integer",
          "format": "int64",
          "description": "Percentage to show the degree of progress"
        },
        "status": {
          "$ref": "#/definitions/TypeStatusActionPlanBO",
          "description": "Status of the action plan"
        },
        "text": {
          "type": "string",
          "description": "Text of the action plan"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        }
      }
    },
    "TypeStatusRecommendationBO": {
      "type": "object",
      "description": "Status types of a recommendation",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idTypeStatusRecommendationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If the status is active or not"
        },
        "txtTypeStatusRecommendation": {
          "type": "string",
          "description": "Text of status types",
          "enum": [
            "PENDIENTE",
            "EN PROCESO",
            "IMPLANTADA",
            "NO CONSIDERADA"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "TypeCritiqueFactBO": {
      "type": "object",
      "description": "Types of critique of a fact",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idTypeCritiqueFactPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If the type of critique is active or not"
        },
        "orderNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Order number",
          "enum": [
            10,
            20,
            30,
            40
          ]
        },
        "txtTypeCritiqueFact": {
          "type": "string",
          "description": "Text of the critique type",
          "enum": [
            "LEVE",
            "MEDIA",
            "ALTA",
            "CRITICA"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "RecommendationEntityBO": {
      "type": "object",
      "description": "Mapfre entity of a recommendation",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "entity": {
          "$ref": "#/definitions/EntamapBO",
          "description": "Mapfre entity"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Code to identify the associated recommendation"
        },
        "idtSqn": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier primary key"
        },
        "recommendation": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the recommendation"
        },
        "text": {
          "type": "string",
          "description": "Text of the recommendation entity"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Date version"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Number version"
        }
      }
    },
    "RecommendationRiskBO": {
      "type": "object",
      "description": "Risk of a recommendation",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Code to identify the associated recommendation"
        },
        "idtSqn": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier primary key"
        },
        "recommendation": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the recommendation"
        },
        "riskType": {
          "$ref": "#/definitions/TypeRiskBO",
          "description": "Risk type of the recommendation"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Vesrion number"
        }
      }
    },
    "RecommendationCommentBO": {
      "type": "object",
      "description": "Comment of the recommendation",
      "properties": {
        "user": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the user who made the comment"
        },
        "commentDate": {
          "type": "string",
          "format": "date_time",
          "description": "Data of the comment"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Code to identify the associated recommendation"
        },
        "idtSqn": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier primary key"
        },
        "recommendation": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the recommendation"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update suer"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        }
      }
    },
    "RecommendationLibBO": {
      "type": "object",
      "description": "Responsible users of a recommendation",
      "properties": {
        "user": {
          "$ref": "#/definitions/UserAmapBO",
          "description": "Responsible user"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Code to identify the associated recommendation"
        },
        "idtSqn": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier primary key"
        },
        "recommendation": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the recommendation"
        },
        "typeResponsability": {
          "$ref": "#/definitions/TypeResponsabilityBO",
          "description": "Responsability type"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        }
      }
    },
    "RecommendationTagBO": {
      "type": "object",
      "description": "Tag of a recommendation",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idtSqn": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier primary key"
        },
        "recommendation": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the recommendation"
        },
        "tag": {
          "$ref": "#/definitions/TagBO",
          "description": "Tag of the recommendation"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Code to identify the associated recommendation"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        }
      }
    },
    "RecommendationProcessSectorBO": {
      "type": "object",
      "description": "Relation between a recommendation, a process and a sector",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Code to identify the associated recommendation"
        },
        "idtSqn": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier primary key"
        },
        "jobProcess": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the job process"
        },
        "recommendation": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier ot the recommendation"
        },
        "sector": {
          "$ref": "#/definitions/SectorBO",
          "description": "Sector of the process"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        },
        "valuation": {
          "$ref": "#/definitions/TypeValorationProcessBO",
          "description": "Valuation of the process"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time",
          "description": "Version date"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Version number"
        }
      }
    },
    "TypeStatusActionPlanBO": {
      "type": "object",
      "description": "Status types of an action plan",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idTypeStatusActionPlanPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If the status is active or not"
        },
        "txtTypeStatusActionPlan": {
          "type": "string",
          "description": "Types of status for an action plan",
          "enum": [
            "EN CURSO",
            "PENDIENTE",
            "RECIBIDO",
            "CONFORME",
            "INCOMPLETO"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "TypeRiskBO": {
      "type": "object",
      "description": "Types of a risk",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "description": {
          "type": "string",
          "description": "Description of the risk",
          "enum": [
            "MAPA_RIESGOS",
            "AUDITORIAS_REALIZADAS",
            "VALORACION",
            "EVOLUCION_RECOMENDACIONES",
            "RIESGO_FRAUDE",
            "IMPORTACION_ESTRATEGICA",
            "INFOMRACION_ECONOMICA"
          ]
        },
        "idTypeRiskPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "TypeResponsabilityBO": {
      "type": "object",
      "description": "Types of responsability",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update user"
        },
        "idTypeResponsabilityPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtState": {
          "type": "string",
          "description": "Text of the responsability",
          "enum": [
            "RESPONSABILIDAD_DE_SEGUIMIENTO",
            "RESPONSABILIDAD_DE_EJECUCION"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "TypeValorationProcessBO": {
      "type": "object",
      "description": "Types of a valoration process",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Date insert"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Date update"
        },
        "idValorationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "order": {
          "type": "integer",
          "format": "int64",
          "description": "Order number",
          "enum": [
            0,
            10,
            20,
            30,
            40
          ]
        },
        "txtName": {
          "type": "string",
          "description": "Text name"
        },
        "userInsert": {
          "type": "string",
          "description": "User insert"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "description": "Type of the valoration porcess",
          "enum": [
            "SIN VALORACION",
            "DEFICIENTE",
            "MEJORABLE",
            "BUENA CON EXCEPCIONES",
            "BUENA"
          ]
        }
      }
    },
    "TypeStatusReportBO": {
      "type": "object",
      "description": "Status types of reports",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Date insert"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Date update"
        },
        "idTypeStatusReportPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtName": {
          "type": "string",
          "description": "Type of status reports",
          "enum": [
            "BORRADOR",
            "DEFINITIVO",
            "NOTA",
            "SIN_EMITIR"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insert"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        }
      }
    },
    "TypeValorationReportBO": {
      "type": "object",
      "description": "Valoration types for a report",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Date insert"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Date update"
        },
        "idValorationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "order": {
          "type": "integer",
          "format": "int64",
          "description": "Order number",
          "enum": [
            0,
            10,
            20,
            30,
            40
          ]
        },
        "txtName": {
          "type": "string",
          "description": "Valoration type of a report",
          "enum": [
            "SIN VALORACION",
            "DEFICIENTE",
            "BUENA",
            "BUENA CON EXCEPCIONES",
            "MEJORABLE"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insert"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "description": "Value",
          "enum": [
            0,
            10,
            20,
            30,
            40
          ]
        }
      }
    },
    "TypeStructureReportBO": {
      "type": "object",
      "description": "Structure types of a report",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Date insert"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Date update"
        },
        "icon": {
          "type": "array",
          "description": "Icon to represent the structure type",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "idTypeStructureReportPk": {
          "type": "integer",
          "format": "int64",
          "description": "ID type structure"
        },
        "isObligatory": {
          "type": "boolean",
          "description": "If the structure is obligatory in a report"
        },
        "txtName": {
          "type": "string",
          "description": "Text name of type structure",
          "enum": [
            "PORTADA",
            "INTRODUCCION",
            "ALCANCE",
            "JUSTIFICACION VALORACION",
            "CONCLUSIONES",
            "HECHOS OBSERVADOS",
            "ANEXOS",
            "FIRMAS",
            "OTROS",
            "PROPUESTAS ADICIONALES"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User insert"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        }
      }
    },
    "SectionReportBO": {
      "type": "object",
      "description": "Section of a report",
      "properties": {
        "comments": {
          "type": "array",
          "description": "Comments of the section",
          "items": {
            "$ref": "#/definitions/CommentReportBO"
          }
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Date insert"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Date update"
        },
        "description": {
          "type": "string",
          "description": "Description of the section"
        },
        "idSectionReportPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "name": {
          "type": "string",
          "description": "Name of the section"
        },
        "order": {
          "type": "integer",
          "format": "int64",
          "description": "Order of the section"
        },
        "reportId": {
          "type": "integer",
          "format": "int64",
          "description": "Report Id relation"
        },
        "typeStructureReport": {
          "description": "Type structure report relation",
          "$ref": "#/definitions/TypeStructureReportBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insert"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        }
      }
    },
    "ReportBO": {
      "type": "object",
      "description": "Report of a job",
      "properties": {
        "actionPlanExpirationDate": {
          "type": "string",
          "format": "date_time",
          "description": "Action plan expiration date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Date insert"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Date update"
        },
        "descriptionNote": {
          "type": "string",
          "description": "Description note"
        },
        "draftExpirationDate": {
          "type": "string",
          "format": "date_time",
          "description": "Draft expiration date"
        },
        "idReportPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "isWeb": {
          "type": "boolean",
          "example": false,
          "description": "Is web report"
        },
        "issueDate": {
          "type": "string",
          "format": "date_time",
          "description": "Issue date"
        },
        "job": {
          "description": "Job associated to the report",
          "$ref": "#/definitions/JobBO"
        },
        "language": {
          "description": "Language",
          "$ref": "#/definitions/LanguageBO"
        },
        "name": {
          "type": "string",
          "description": "Name of the report"
        },
        "reasonClose": {
          "description": "Type reason close",
          "$ref": "#/definitions/TypeReasonCloseBO"
        },
        "recipients": {
          "type": "array",
          "description": "Recipients of the report",
          "items": {
            "$ref": "#/definitions/UserAmapBO"
          }
        },
        "report": {
          "type": "array",
          "description": "Report file",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "reportName": {
          "type": "string",
          "description": "Report name"
        },
        "sections": {
          "type": "array",
          "description": "Report sections",
          "items": {
            "$ref": "#/definitions/SectionReportBO"
          }
        },
        "status": {
          "description": "Status",
          "$ref": "#/definitions/TypeStatusReportBO"
        },
        "stdName": {
          "type": "string",
          "description": "Standard name of the report"
        },
        "typeDocument": {
          "type": "string",
          "description": "Type document"
        },
        "userInsert": {
          "type": "string",
          "description": "User insert"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        },
        "valoration": {
          "description": "Valoration of the report",
          "$ref": "#/definitions/TypeValorationReportBO"
        }
      }
    },
    "CommentReportBO": {
      "type": "object",
      "description": "Comment of a report",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Date insert"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Date update"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "sectionReportFk": {
          "type": "integer",
          "format": "int64",
          "description": "Section of the report where comment belong"
        },
        "text": {
          "type": "string",
          "description": "Text of the comment"
        },
        "userInsert": {
          "type": "string",
          "description": "Author of the comment"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        }
      }
    },
    "BudgetCommentBO": {
      "type": "object",
      "description": "Comments associated to a budget",
      "properties": {
        "budgetId": {
          "type": "integer",
          "format": "int64",
          "description": "Budget identifier"
        },
        "commentTxt": {
          "type": "string",
          "description": "Comment text"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idBudgetComment": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "typeCommentId": {
          "type": "integer",
          "format": "int64",
          "description": "Type comment id"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "BudgetTrackingBO": {
      "type": "object",
      "description": "Tracking of a budger",
      "properties": {
        "budgetId": {
          "type": "integer",
          "format": "int64",
          "description": "Budget identifier"
        },
        "budgetTrackingChildren": {
          "type": "array",
          "description": "List of children of this budget",
          "items": {
            "$ref": "#/definitions/BudgetTrackingBO"
          }
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "estimatedQuarter1": {
          "type": "number",
          "description": "Estimated Number First Trimester"
        },
        "estimatedQuarter2": {
          "type": "number",
          "description": "Estimated Number Second Trimester"
        },
        "estimatedQuarter3": {
          "type": "number",
          "description": "Estimated Number Third Trimester"
        },
        "estimatedQuarter4": {
          "type": "number",
          "description": "Estimated Number Fourth Trimester"
        },
        "idBudgetTrackingPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "realQuarter1": {
          "type": "number",
          "description": "Real Number First Trimester"
        },
        "realQuarter2": {
          "type": "number",
          "description": "Real Number Second Trimester"
        },
        "realQuarter3": {
          "type": "number",
          "description": "Real Number Third Trimester"
        },
        "realQuarter4": {
          "type": "number",
          "description": "Real Number Fourth Trimester"
        },
        "typeBudgetExpense": {
          "description": "Budget expense type",
          "$ref": "#/definitions/TypeBudgetExpenseBO"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeBudgetExpenseBO": {
      "type": "object",
      "description": "Types of budget expenses",
      "properties": {
        "budgetExpenseList": {
          "type": "array",
          "description": "List of budget expenses",
          "items": {
            "$ref": "#/definitions/BudgetExpenseBO"
          }
        },
        "budgetExpenseTypeFather": {
          "description": "Father of this budget expense type",
          "$ref": "#/definitions/TypeBudgetExpenseBO"
        },
        "budgetExpenseTypeId": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "imputable": {
          "type": "boolean",
          "description": "If the expense is inmutable or not"
        },
        "modificationUserVAlue": {
          "type": "string",
          "description": "User that makes a modification"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If the budget is active"
        },
        "txtTypeBudgetExpense": {
          "type": "string",
          "description": "Test to describe the expense",
          "enum": [
            "PERSONAL",
            "SELECCION Y FORMACION",
            "VIAJES Y RELACIONES PUBLICAS",
            "LOCALES E INMUEBLES",
            "INFORMATICA",
            "PUBLICIDAD",
            "SERVICIOS PROFESIONALES INDEPENDIENTES",
            "OTROS GASTOS INTERNOS",
            "OTROS INGRESOS",
            "RETRIBUCIONES FIJAS",
            "VIAJES Y REALACIONES PUBLICAS",
            "SELECCIÓN Y FORMACION",
            "ARRENDAMIENTOS",
            "AMORTIZACION APLICACIONES",
            "COMUNICACIONES",
            "OTROS SERVICIOS Y COLABORACIONES - TERCERO",
            "OTROS SERVICIOS Y COLABORACIONES - GRUPO",
            "EMPRESAS DE TRABAJO TEMPORAL",
            "PUBLICIDAD INSTITUCIONAL",
            "PUBLICIDAD OPERATIVA",
            "EQUIPOS",
            "AMORTIZACION EQUIPOS",
            "APLICACIONES",
            "SERVICIOS EXTERNOS - GRUPO",
            "SERVICIOS EXTERNOS - TERCEROS",
            "MANTENIMIENTO, SUMINISTROS E IMPUESTOS",
            "AMORTIZACIONES",
            "RETRIBUCIONES VARIABLES",
            "ACCION SOCIAL",
            "HABERES PASIVOS",
            "INDEMNIZACIONES",
            "OTROS GASTOS DE PERSONAL",
            "GASTOS DE PERSONAL - GRUPO"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "User inert"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        }
      }
    },
    "ImputationTimeBO": {
      "type": "object",
      "description": "Imputation time",
      "properties": {
        "dateImputation": {
          "type": "string",
          "format": "date_time",
          "description": "Imputation date"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idImputactonPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "idJobFk": {
          "type": "integer",
          "format": "int64",
          "description": "Job identifier"
        },
        "idUserFk": {
          "type": "integer",
          "format": "int64",
          "description": "User identifier"
        },
        "nmrHours": {
          "type": "number",
          "description": "Hours number to imputate"
        },
        "txtComment": {
          "type": "string",
          "description": "Comment text"
        },
        "typeConceptImputation": {
          "description": "Imputation concept",
          "$ref": "#/definitions/TypeConceptImputationBO"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "ImputationTimeTableBO": {
      "type": "object",
      "description": "Time table of imputations",
      "properties": {
        "idJobFk": {
          "type": "integer",
          "format": "int64",
          "description": "Job identifier"
        },
        "idTypeConceptImputationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Type of imputation concept"
        },
        "imputationTime": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImputationTimeBO"
          },
          "description": "List of imputation times"
        },
        "txtComment": {
          "type": "string",
          "description": "Comment text"
        },
        "txtJobName": {
          "type": "string",
          "description": "Text of job name"
        },
        "txtTypeConceptImputation": {
          "type": "string",
          "description": "Concept imputation type"
        }
      }
    },
    "ImputationActivityBO": {
      "type": "object",
      "description": "Imputation activity",
      "properties": {
        "activitiesChildren": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobImputationTimeBO"
          },
          "description": "Activities of this imputation activity"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "idTypeConceptImputationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "imputablePai": {
          "type": "boolean",
          "example": false,
          "description": "If it is an imputable pai"
        },
        "imputationsChildren": {
          "type": "array",
          "description": "Imputation children list",
          "items": {
            "$ref": "#/definitions/ImputationActivityBO"
          }
        },
        "txtTypeConceptImputation": {
          "type": "string",
          "description": "Concept imputation type text"
        }
      }
    },
    "ImputationTimeInfoBO": {
      "type": "object",
      "description": "Imputation time information",
      "properties": {
        "absentsDays": {
          "type": "integer",
          "format": "int32",
          "description": "Days of absent"
        },
        "availableHours": {
          "type": "integer",
          "format": "int32",
          "description": "Available hours"
        },
        "hoursDays": {
          "type": "integer",
          "format": "int32",
          "description": "Hours of imputation"
        },
        "imputationDays": {
          "type": "integer",
          "format": "int32",
          "description": "Days of imputaation"
        }
      }
    },
    "JobImputationTimeBO": {
      "type": "object",
      "description": "Imputation time of a job",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "idJobOrganizationalPk": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of the relation between a job and an organization"
        },
        "jobId": {
          "type": "integer",
          "format": "int64",
          "description": "Job identifier"
        },
        "observations": {
          "type": "string",
          "description": "Observations of the imputation"
        },
        "organizationalStructure": {
          "type": "integer",
          "format": "int64",
          "description": "Mapfre organizational structure"
        }
      }
    },
    "PredictionPersonnelBO": {
      "type": "object",
      "description": "Prediction personnel for internal audit plans",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idPredictionPersonnel": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "nmrExerciese": {
          "type": "integer",
          "format": "int64",
          "description": "Exercise number"
        },
        "organizationalStructure": {
          "type": "integer",
          "format": "int64",
          "description": "Mapfre organizational structure"
        },
        "pais": {
          "type": "array",
          "description": "Internal audit plans",
          "items": {
            "$ref": "#/definitions/PaiBO"
          }
        },
        "predictionPromotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PredictionPromotionBO"
          },
          "description": "Promotions of the personnel prediction"
        },
        "predictionStaffs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PredictionStaffBO"
          },
          "description": "Staff of the personnel prediction"
        },
        "txtComments": {
          "type": "string",
          "description": "Comment text"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "PredictionStaffBO": {
      "type": "object",
      "description": "Staff of a personnel prediction",
      "properties": {
        "actualResourceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of resources"
        },
        "admissionResourceHours": {
          "type": "number",
          "description": "Hours of resources added"
        },
        "admissionResourceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Number of resources added"
        },
        "categoryType": {
          "$ref": "#/definitions/TypeCategoryProfessionalBO",
          "description": "Type of category"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idPredictionStaff": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "predictionPersonnelId": {
          "type": "integer",
          "format": "int64",
          "description": "Prediction personnel identifier"
        },
        "removeResourceHours": {
          "type": "number",
          "description": "Resource hours that are unsubscribed"
        },
        "removeResourceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Resource number that are unsubscribed"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "PredictionPromotionBO": {
      "type": "object",
      "description": "Promotions for a personnel prediction",
      "properties": {
        "actualCategory": {
          "$ref": "#/definitions/TypeCategoryProfessionalBO",
          "description": "Actual category of an auditor"
        },
        "categoryType": {
          "$ref": "#/definitions/TypeCategoryProfessionalBO",
          "description": "Type of actual category"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update user"
        },
        "idPredictionPromotionn": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "oldAudit": {
          "type": "string",
          "description": "Seniority in audit of an auditor"
        },
        "oldCategory": {
          "type": "string",
          "description": "Seniority in actual category"
        },
        "predictionPersonnelId": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of a personnel prediction"
        },
        "userAmapId": {
          "type": "integer",
          "format": "int64",
          "description": "User identifier"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userName": {
          "type": "string",
          "description": "User name"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "JobPaiBO": {
      "type": "object",
      "description": "Relation between a job and an audit internal plan",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "hours": {
          "type": "integer",
          "format": "int64",
          "description": "Hours"
        },
        "idRelationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "jobId": {
          "type": "integer",
          "format": "int64",
          "description": "Job identifier"
        },
        "observations": {
          "type": "string",
          "description": "Observations of the relation"
        },
        "paiId": {
          "type": "integer",
          "format": "int64",
          "description": "Audit internal plan identifier"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "JobOrganizationalStructureBO": {
      "type": "object",
      "description": "Relation between a job and a Mapfre organizational structure",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update user"
        },
        "hours": {
          "type": "integer",
          "format": "int64",
          "description": "Hours"
        },
        "idJobOrganizationalPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "jobId": {
          "type": "integer",
          "format": "int64",
          "description": "Job identifier"
        },
        "mainOS": {
          "type": "boolean",
          "description": "Main organizational structure"
        },
        "observations": {
          "type": "string",
          "description": "Observations of the relationship"
        },
        "organizationalStructure": {
          "$ref": "#/definitions/OrganizationalStructureBO",
          "description": "Mapfre organizational structure"
        },
        "userInsert": {
          "type": "string",
          "description": "User insert"
        },
        "userUpdate": {
          "type": "string",
          "description": "User udpate"
        }
      }
    },
    "BudgetExpenseBO": {
      "type": "object",
      "description": "Expenses of a budget",
      "properties": {
        "budgetExercise": {
          "type": "number",
          "description": "Previous budget of the exercise"
        },
        "budgetExpenseChildren": {
          "type": "array",
          "description": "List of expenses that are children of this budget expense",
          "items": {
            "$ref": "#/definitions/BudgetExpenseBO"
          }
        },
        "budgetExpenseId": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "budgetId": {
          "type": "integer",
          "format": "int64",
          "description": "Budget id"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "exerciseMns1": {
          "type": "number",
          "description": "Previous budget of the previous exercise"
        },
        "exerciseMns2": {
          "type": "number",
          "description": "Previous budget of the 2 previous exercise"
        },
        "exercisePlu1": {
          "type": "number",
          "description": "Previous budget of the next exercise"
        },
        "exercisePlu2": {
          "type": "number",
          "description": "Previous budget of the 2 next exercise"
        },
        "realBudgetMns2": {
          "type": "number",
          "description": "Real Budget of the 2 Previous Exerciese"
        },
        "typeBudgetExpense": {
          "description": "Type of budget expense",
          "$ref": "#/definitions/TypeBudgetExpenseBO"
        },
        "upaBudgetMns001": {
          "type": "number",
          "description": "UPA Budget of the Previous Exerciese"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "FileBO": {
      "type": "object",
      "description": "Attributes of a file",
      "properties": {
        "url": {
          "type": "string",
          "description": "Location of the file"
        },
        "type": {
          "type": "string",
          "description": "Auditmap concept associated to the files that will be upload",
          "enum": [
            "report",
            "task",
            "job",
            "recommendation",
            "user-cv-es",
            "user-cv-en",
            "user-sign",
            "user-photo",
            "relevantAspect",
            "activity",
            "dealComittee",
            "dealComitteeEntrance",
            "invoice",
            "external-report"
          ]
        },
        "identifier": {
          "type": "number",
          "format": "int64",
          "description": "Identifier of the file"
        },
        "name": {
          "type": "integer",
          "description": "File name"
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "Error from GAIA",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        },
        "type": {
          "type": "string",
          "description": "Exception type"
        },
        "exception": {
          "type": "string",
          "description": "Java exception"
        },
        "component": {
          "type": "string",
          "description": "Class that throws exception"
        },
        "application": {
          "type": "string",
          "description": "Application name"
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of the exception"
        },
        "errors": {
          "type": "object",
          "description": "Info about error",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code"
            },
            "message": {
              "type": "string",
              "description": "Error message"
            },
            "component": {
              "type": "string",
              "description": "Class that throws the exception"
            },
            "rootcause": {
              "type": "string",
              "description": "Java exception"
            },
            "info": {
              "type": "array",
              "description": "Code value map of errors",
              "items": {
                "type": "object",
                "description": "Error info",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Error info key"
                  },
                  "value": {
                    "type": "string",
                    "description": "Error info value"
                  }
                }
              }
            }
          }
        },
        "stackTrace": {
          "type": "object",
          "description": "Stack trace of the exception",
          "properties": {
            "declaringClass": {
              "type": "string",
              "description": "Class that throws the exception"
            },
            "methodName": {
              "type": "string",
              "description": "Name of the method that throws the exception"
            },
            "fileName": {
              "type": "string",
              "description": "Name of the file of the class that throws the exception"
            },
            "lineNumber": {
              "type": "number",
              "description": "Line number of the class that throws the exception"
            }
          }
        }
      }
    },
    "AdditionalProposalBO": {
      "type": "object",
      "description": "Additional proposal for a internal audit plan",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time"
        },
        "description": {
          "type": "string"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntamapBO"
          }
        },
        "idAdditionalProposalPk": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "programJob": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagBO"
          }
        },
        "userInsert": {
          "type": "string"
        },
        "userUpdate": {
          "type": "string"
        },
        "versionDate": {
          "type": "string",
          "format": "date_time"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TypeStateNodeBO": {
      "type": "object",
      "description": "Type of a node (a node could be an area, subarea or task)",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeStatePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "Mark active Type node"
        },
        "tasks": {
          "type": "array",
          "description": "Task list",
          "items": {
            "$ref": "#/definitions/TaskBO"
          }
        },
        "txtState": {
          "type": "string",
          "description": "State text"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeBudgetExpenseTreeBO": {
      "type": "object",
      "description": "Tree type of budget expenses",
      "properties": {
        "budgetExpenseTypeChilds": {
          "type": "array",
          "description": "Budget expense type childs",
          "items": {
            "$ref": "#/definitions/TypeBudgetExpenseBO"
          }
        },
        "budgetExpenseTypeId": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "imputable": {
          "type": "boolean",
          "example": false,
          "description": "Indicates if it is imputable"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "txtTypeBudgetExpense": {
          "type": "string",
          "description": "Type budget expense text"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "TypeBudgetStatusBO": {
      "type": "object",
      "description": "Type of budget status",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeStatusBudgetPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "txtTypeStatusBudget": {
          "type": "string",
          "description": "Budget status type description"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        }
      }
    },
    "ExternalCompanyBO": {
      "type": "object",
      "description": "External company",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address of the company"
        },
        "cif": {
          "type": "number",
          "description": "Tax identification number"
        },
        "country": {
          "description": "Country",
          "$ref": "#/definitions/CountryBO"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "email": {
          "type": "string",
          "description": "Email"
        },
        "idExternalCompanyPK": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "txtCompany": {
          "type": "string",
          "description": "Company name"
        },
        "userInsert": {
          "type": "string",
          "description": "Insertion user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Modification user"
        }
      }
    },
    "TypeExternalReportBO": {
      "type": "object",
      "description": "Type of external report",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "idTypeExternalReportPK": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "userInsert": {
          "type": "string",
          "description": "Insertion user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Modification user"
        }
      }
    },
    "TypeExternalAuditBO": {
      "type": "object",
      "description": "Type of external audit",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "idTypeExternalAuditPK": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "example": false,
          "description": "If it is active"
        },
        "txtDescription": {
          "type": "string",
          "description": "Description"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string"
        }
      }
    },
    "TypeVisibilityRuleBO": {
      "type": "object",
      "description": "Type of visibility rule",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "filterVisibility": {
          "type": "string",
          "description": "Name of the visibility type",
          "enum": [
            "ESTRUCTURA_ORGANIZATIVA",
            "ETIQUETAS",
            "UNIDAD_NEGOCIO",
            "ENTIDAD",
            "PAIS",
            "REGION"
          ]
        },
        "idTypeVisibilityPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "TypeUserVisibilityRuleBO": {
      "type": "object",
      "description": "Relation between an user and a visibility rule",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idTypeVisibilityUserPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "objetcIdentifier": {
          "type": "string",
          "description": "Identifier of the object that applies this visibility rule"
        },
        "typeVisibilityFk": {
          "$ref": "#/definitions/TypeVisibilityRuleBO",
          "description": "Type of visibility rule"
        },
        "user": {
          "$ref": "#/definitions/UserAmapBO",
          "description": "User of visibility rule"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "TypeActivityBO": {
      "type": "object",
      "description": "Type of activity",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idTypeActivityPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "mrkActive": {
          "type": "boolean",
          "description": "If is active or not"
        },
        "txtDsp": {
          "type": "string",
          "description": "Text description of the type"
        },
        "txtNam": {
          "type": "string",
          "description": "Text name of the type",
          "enum": [
            "AUDITORIAS",
            "COLABORACIONES",
            "FORMACION",
            "SEGUIMIENTO DE RECOMENDACIONES",
            "COORDINACION Y SUPERVISION",
            "OTRAS ACTIVIDADES",
            "AUSENCIAS JUSTIFICADAS",
            "N/A",
            "INTERNA",
            "EXTERNA",
            "AUDITORIA EXTERNA",
            "INTERDEPARTAMENTAL",
            "OTRAS COLABORACIONES",
            "AUDITORIA COMPRA/ADQUISICION"
          ]
        },
        "typeActivitiesChilds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeActivityBO"
          },
          "description": "Children activity types"
        },
        "typeActivityFather": {
          "$ref": "#/definitions/TypeActivityBO",
          "description": "Type activity father"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "UserProfileBO": {
      "type": "object",
      "description": "Profile of an user",
      "properties": {
        "personalInformation": {
          "description": "Personal Information",
          "$ref": "#/definitions/PersonalInformationBO"
        },
        "professionalInformation": {
          "description": "Professional Information",
          "$ref": "#/definitions/ProfessionalInformationBO"
        },
        "trainingData": {
          "description": "Training Data",
          "$ref": "#/definitions/TrainingDataBO"
        }
      }
    },
    "PersonalInformationBO": {
      "type": "object",
      "description": "Personal information of an user",
      "properties": {
        "nmrMobile": {
          "type": "integer",
          "format": "int64",
          "description": "Mobile number"
        },
        "organizationalStructure": {
          "type": "string",
          "description": "Organizational structure"
        },
        "profesionalCategory": {
          "type": "string",
          "description": "Profesional category"
        },
        "specialties": {
          "type": "array",
          "description": "User specialties",
          "items": {
            "$ref": "#/definitions/UserSpecialityBO"
          }
        },
        "txtLastname1": {
          "type": "string",
          "description": "First last name"
        },
        "txtLastname2": {
          "type": "string",
          "description": "Second last name"
        },
        "txtMail": {
          "type": "string",
          "description": "Mail"
        },
        "txtName": {
          "type": "string",
          "description": "Name"
        }
      }
    },
    "ProfessionalInformationBO": {
      "type": "object",
      "description": "Professional information of an user",
      "properties": {
        "mobilityFunctional": {
          "type": "boolean",
          "example": false,
          "description": "If it is mobility functional"
        },
        "mobilityGeographic": {
          "type": "boolean",
          "example": false,
          "description": "If it is mobility geographic"
        },
        "nmrLaboralHours": {
          "type": "number",
          "description": "Number of laboral hours"
        },
        "professionalCategoryHistory": {
          "type": "array",
          "description": "Professional Category History",
          "items": {
            "type": "string"
          }
        },
        "txtExperience": {
          "type": "string",
          "description": "Experience text"
        }
      }
    },
    "TrainingDataBO": {
      "type": "object",
      "description": "Training data of an user",
      "properties": {
        "academicTraining": {
          "type": "array",
          "description": "User Trainings",
          "items": {
            "$ref": "#/definitions/UserTrainingBO"
          }
        },
        "certifications": {
          "type": "array",
          "description": "User Certifications",
          "items": {
            "$ref": "#/definitions/UserCertificationBO"
          }
        },
        "comments": {
          "type": "string",
          "description": "User comments"
        },
        "languages": {
          "type": "array",
          "description": "User Languages",
          "items": {
            "$ref": "#/definitions/UserLanguageBO"
          }
        }
      }
    },
    "UserSpecialityBO": {
      "type": "object",
      "description": "User speciality",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "idUserSpecialityPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtCmt": {
          "type": "string",
          "description": "Comment text"
        },
        "typeSpecialityFk": {
          "$ref": "#/definitions/TypeSpecialityBO",
          "description": "User speciality"
        },
        "userAmap": {
          "type": "integer",
          "format": "int64",
          "description": "Auditmap3 user"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        }
      }
    },
    "UserCertificationBO": {
      "type": "object",
      "description": "Certification user",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "idUserCertificationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "txtCmt": {
          "type": "string",
          "description": "Comment text"
        },
        "typeCertificationFk": {
          "$ref": "#/definitions/TypeCertificationBO",
          "description": "Type of certification"
        },
        "userAmap": {
          "type": "integer",
          "format": "int64",
          "description": "Auditmap3 user"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        }
      }
    },
    "DealComitteeBO": {
      "type": "object",
      "description": "Deal committee",
      "properties": {
        "dealComitteeId": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "orgStrId": {
          "type": "integer",
          "format": "int64",
          "description": "Organizative structure of the deal comittee"
        },
        "name": {
          "type": "string",
          "description": "Name of the deal comittee"
        },
        "standardName": {
          "type": "string",
          "description": "Standard name of the deal comittee"
        },
        "txtComittee": {
          "type": "string",
          "description": "Text comittee"
        }
      }
    },
    "DealComitteeEntranceBO": {
      "type": "object",
      "description": "Deal comittee entrance for a deal comittee",
      "properties": {
        "dealComitteeEntranceId": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "dealComitteeId": {
          "type": "integer",
          "format": "int64",
          "description": "Deal comitteee"
        },
        "name": {
          "type": "string",
          "description": "Name of the deal comittee entrance"
        }
      }
    },
    "ActivityBO": {
      "type": "object",
      "description": "Activity",
      "properties": {
        "idActivityPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "activity": {
          "type": "integer",
          "format": "int64",
          "description": "Name of the activity"
        },
        "hours": {
          "type": "integer",
          "format": "int64",
          "description": "Hours of the activity"
        },
        "description": {
          "type": "string",
          "description": "Description of the activity"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "documents": {
          "type": "array",
          "description": "Document list",
          "items": {
            "$ref": "#/definitions/ActivityBO"
          }
        }
      }
    },
    "ActivityDocumentBO": {
      "type": "object",
      "description": "Activity document",
      "properties": {
        "idActivityDocumentPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "name": {
          "type": "string",
          "description": "Name of the activity document"
        },
        "typeDocument": {
          "type": "string",
          "description": "Type of document",
          "enum": [
            "PDF",
            "DOC",
            "DOCX"
          ]
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Size of the document"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "fileDocument": {
          "type": "array",
          "description": "Document file",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "ExternalAuditInvoiceDocumentBO": {
      "type": "object",
      "description": "External audit invoice document",
      "properties": {
        "idExternalAuditInvoiceDocumentPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "name": {
          "type": "string",
          "description": "Name of external audit invoice document"
        },
        "typeDocument": {
          "type": "string",
          "description": "Type of document",
          "enum": [
            "PDF",
            "DOC",
            "DOCX"
          ]
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Size of document"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "fileDocument": {
          "type": "array",
          "description": "Document file",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "ExternalReportBO": {
      "type": "object",
      "description": "External report",
      "properties": {
        "idExternalReportPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "idExternalAuditFK": {
          "type": "integer",
          "format": "int64",
          "description": "External audit of the report"
        },
        "typeExternalReportBO": {
          "$ref": "#/definitions/TypeExternalReportBO",
          "description": "Type of the external report"
        },
        "fnlDat": {
          "type": "string",
          "format": "date_time",
          "description": "final date"
        },
        "inlDat": {
          "type": "string",
          "format": "date_time",
          "description": "inital date"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Size of file"
        },
        "txtName": {
          "type": "string",
          "description": "Name of the document"
        },
        "typeDocument": {
          "type": "string",
          "description": "Type of document",
          "enum": [
            "PDF",
            "DOC",
            "DOCX"
          ]
        },
        "fileDocument": {
          "type": "array",
          "description": "Document file",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "ExternalAuditJobBO": {
      "type": "object",
      "description": "Relation between an external audit and a job",
      "properties": {
        "idRelationPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "job": {
          "type": "integer",
          "format": "int64",
          "description": "Job"
        },
        "externalAudit": {
          "type": "integer",
          "format": "int64",
          "description": "External audit"
        },
        "userInsert": {
          "type": "string",
          "description": "User insertion"
        },
        "userUpdate": {
          "type": "string",
          "description": "User modification"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insertion date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Modification date"
        }
      }
    },
    "ExternalAuditBO": {
      "type": "object",
      "description": "External audit",
      "properties": {
        "idExternalAuditPk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "organizationalStructure": {
          "type": "integer",
          "format": "int64",
          "description": "Organizative structure of the external audit"
        },
        "exercise": {
          "type": "integer",
          "format": "int64",
          "description": "Year of the exercise"
        },
        "dateStart": {
          "type": "string",
          "format": "date_time",
          "description": "Start date"
        },
        "dateEnd": {
          "type": "string",
          "format": "date_time",
          "description": "End date"
        },
        "name": {
          "type": "string",
          "description": "Name of the external audit"
        },
        "standardName": {
          "type": "string",
          "description": "Standard name"
        },
        "company": {
          "type": "integer",
          "format": "int64",
          "description": "Company name"
        },
        "description": {
          "type": "string",
          "description": "Description of the external audit"
        },
        "externalAuditType": {
          "type": "integer",
          "format": "int64",
          "description": "External audit plan"
        },
        "currency": {
          "type": "integer",
          "format": "int64",
          "description": "Currency"
        },
        "budgetAmount": {
          "type": "integer",
          "format": "int64",
          "description": "Budget amount"
        },
        "expensesAmount": {
          "type": "integer",
          "format": "int64",
          "description": "Expenses amount"
        },
        "externalAuditInvoice": {
          "$ref": "#/definitions/ExternalAuditInvoiceBO",
          "description": "External audit invoice"
        },
        "externalReport": {
          "$ref": "#/definitions/ExternalReportBO",
          "description": "External report"
        },
        "job": {
          "type": "integer",
          "format": "int64",
          "description": "Job"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        }
      }
    },
    "ExternalAuditInvoiceBO": {
      "type": "object",
      "description": "Externla audit invoice",
      "properties": {
        "idInvoincePk": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "externalAudit": {
          "type": "integer",
          "format": "int64",
          "description": "External audit"
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "Amount of the invoice"
        },
        "text": {
          "type": "string",
          "description": "Text"
        },
        "issueDate": {
          "type": "string",
          "format": "date_time",
          "description": "Issue date"
        },
        "currencyType": {
          "type": "integer",
          "format": "int64",
          "description": "Currency type"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "userUpdate": {
          "type": "string",
          "description": "User update"
        },
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        }
      }
    },
    "TypeQuestionnaireBO": {
      "type": "object",
      "description": "Type of questionnaire",
      "properties": {
        "dateInsert": {
          "type": "string",
          "format": "date_time",
          "description": "Insert date"
        },
        "dateUpdate": {
          "type": "string",
          "format": "date_time",
          "description": "Update date"
        },
        "idTypeQuestionnaire": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence identifier Primary key"
        },
        "description": {
          "type": "string",
          "description": "Text name of the type",
          "enum": [
            "CUESTIONARIO_EVALUACION_TRABAJO_AUDITOR",
            "CUESTIONARIO_EVALUACION_TRABAJO_RESPONSABLE",
            "CUESTIONARIO_EVALUACION_TRABAJO_AUDITADO",
            "CUESTIONARIO_EVALUACION_ANUAL_AUDITOR",
            "CUESTIONARIO_EVALUACION_ANUAL_DIRECTOR"
          ]
        },
        "userInsert": {
          "type": "string",
          "description": "Insert user"
        },
        "userUpdate": {
          "type": "string",
          "description": "Update user"
        }
      }
    },
    "GlobalSearchBO": {
      "type": "object",
      "description": "Global search info",
      "properties": {
        "totalPais": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of PAIS"
        },
        "totalJobs": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of jobs"
        },
        "totalRiskMatrix": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of risk matrix"
        },
        "totalBudgets": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of budgets"
        },
        "totalRelevantAspects": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of relevant aspects"
        },
        "totalExternalAudits": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of external audits"
        },
        "totalIdeas": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of ideas"
        },
        "totalReports": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of reports"
        },
        "totalRecommendations": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of recommendations"
        }
      }
    },
    "DashboardInfoBO": {
      "type": "object",
      "description": "Dashboard info",
      "properties": {
        "totalActionPlans": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of action plans"
        },
        "totalReports": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of reports"
        },
        "totalRecommendations": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of recommendations"
        },
        "totalQuestionnaires": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of questionnaires"
        }
      }
    }
  }
}
